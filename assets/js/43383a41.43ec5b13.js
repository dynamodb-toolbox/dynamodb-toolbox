"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2852],{6780:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var s=t(4848),i=t(8453),a=t(1470),d=t(9365);const o={title:"UpdateItem",sidebar_custom_props:{sidebarActionType:"write"}},r="UpdateItemCommand",l={id:"entities/actions/update-item/index",title:"UpdateItem",description:"Performs an UpdateItem Operation on an entity item:",source:"@site/docs/3-entities/4-actions/3-update-item/index.md",sourceDirName:"3-entities/4-actions/3-update-item",slug:"/entities/actions/update-item/",permalink:"/docs/entities/actions/update-item/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"UpdateItem",sidebar_custom_props:{sidebarActionType:"write"}},sidebar:"tutorialSidebar",previous:{title:"PutItem",permalink:"/docs/entities/actions/put-item/"},next:{title:"UpdateAttributes",permalink:"/docs/entities/actions/update-attributes/"}},c={},m=[{value:"Request",id:"request",level:2},{value:"<code>.item(...)</code>",id:"item",level:3},{value:"Removing an attribute",id:"removing-an-attribute",level:3},{value:"References",id:"references",level:3},{value:"Flat attributes",id:"flat-attributes",level:3},{value:"Deep attributes",id:"deep-attributes",level:3},{value:"<code>.options(...)</code>",id:"options",level:3},{value:"Examples",id:"examples",level:2},{value:"Response",id:"response",level:2},{value:"Extended Syntax",id:"extended-syntax",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"updateitemcommand",children:"UpdateItemCommand"})}),"\n",(0,s.jsxs)(n.p,{children:["Performs an ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateItem.html",children:"UpdateItem Operation"})," on an entity item:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { UpdateItemCommand } from 'dynamodb-toolbox/entity/actions/update'\n\nconst updateItemCommand = PokemonEntity.build(\n  UpdateItemCommand\n)\n\nconst params = updateItemCommand.params()\nawait updateItemCommand.send()\n"})}),"\n",(0,s.jsx)(n.h2,{id:"request",children:"Request"}),"\n",(0,s.jsx)(n.h3,{id:"item",children:(0,s.jsx)(n.code,{children:".item(...)"})}),"\n",(0,s.jsx)("p",{style:{marginTop:"-15px"},children:(0,s.jsx)("i",{children:"(required)"})}),"\n",(0,s.jsx)(n.p,{children:"The attributes to update, including the key:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { UpdateItemCommand, $add } from 'dynamodb-toolbox/entity/actions/update'\n\nawait PokemonEntity.build(UpdateItemCommand)\n  .item({\n    pokemonId: 'pikachu1',\n    level: $add(1),\n    ...\n  })\n  .send()\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"UpdateItemInput"})," type to explicitly type an object as a ",(0,s.jsx)(n.code,{children:"UpdateItemCommand"})," item object:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import type { UpdateItemInput } from 'dynamodb-toolbox/entity/actions/update'\n\nconst item: UpdateItemInput<typeof PokemonEntity> = {\n  pokemonId: 'pikachu1',\n  level: $add(1),\n  ...\n}\n\nawait PokemonEntity.build(UpdateItemCommand).item(item).send()\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"UpdateItemInput"})," differs from ",(0,s.jsx)(n.a,{href:"/docs/entities/actions/put-item/#item",children:(0,s.jsx)(n.code,{children:"PutItemInput"})})," as it is ",(0,s.jsx)(n.strong,{children:"partial by default"}),", except for ",(0,s.jsx)(n.code,{children:"always"})," required attributes without defaults or links."]}),"\n",(0,s.jsxs)(n.p,{children:["It also benefits from an ",(0,s.jsx)(n.strong,{children:"extended syntax"})," that reflects the ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.UpdateExpressions.html",children:"capabilities of DynamoDB"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["Note that the extended syntax (",(0,s.jsx)(n.code,{children:"$get"}),", ",(0,s.jsx)(n.code,{children:"$add"}),", ",(0,s.jsx)(n.code,{children:"$append"}),"...) only adds clauses to the command ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateItem.html#DDB-UpdateItem-request-UpdateExpression",children:(0,s.jsx)(n.code,{children:"UpdateExpression"})})," but does ",(0,s.jsx)(n.strong,{children:"not"})," trigger an item fetch."]})}),"\n",(0,s.jsx)(n.h3,{id:"removing-an-attribute",children:"Removing an attribute"}),"\n",(0,s.jsxs)(n.p,{children:["Any optional attribute can be removed with the ",(0,s.jsx)(n.code,{children:"$remove"})," extension:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { $remove } from 'dynamodb-toolbox/entity/actions/update'\n\nawait PokemonEntity.build(UpdateItemCommand)\n  .item({\n    pokemonId: 'pikachu1',\n    // \ud83d\udc47 clear 'statusEffect' from pokemon\n    statusEffect: $remove()\n  })\n  .send()\n"})}),"\n",(0,s.jsx)(n.h3,{id:"references",children:"References"}),"\n",(0,s.jsxs)(n.p,{children:["You can indicate DynamoDB to resolve an attribute ",(0,s.jsx)(n.strong,{children:"at write time"})," with the ",(0,s.jsx)(n.code,{children:"$get"})," extension:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { $get } from 'dynamodb-toolbox/entity/actions/update'\n\nawait PokemonEntity.build(UpdateItemCommand)\n  .item({\n    ...\n    level: 42,\n    // \ud83d\udc47 fill 'previousLevel' with current 'level'\n    previousLevel: $get('level')\n  })\n  .send()\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Self-references are possible. You can also ",(0,s.jsx)(n.strong,{children:"provide a fallback"})," as a second argument (which can also be a reference) in case the specified attribute path misses from the item:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"await PokemonEntity.build(UpdateItemCommand)\n  .item({\n    ...\n    previousLevel: $get('level', 1),\n    // \ud83d\udc47 fallback can also be a reference!\n    chainedRefs: $get(\n      'firstRef',\n      $get('secondRef', 'Sky is the limit!')\n    )\n  })\n  .send()\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note that the attribute path is type-checked, but whether its attribute value extends the updated attribute value is ",(0,s.jsx)(n.strong,{children:"not"})," for the moment, so be extra-careful:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"await PokemonEntity.build(UpdateItemCommand)\n  .item({\n    // \u274c Raises a type error\n    name: $get('non.existing[0].attribute'),\n    // ...but overriding a number by a string doesn't \ud83d\ude48\n    level: $get('name')\n  })\n  .send()\n"})}),"\n",(0,s.jsx)(n.h3,{id:"flat-attributes",children:"Flat attributes"}),"\n",(0,s.jsxs)(n.p,{children:["In the case of flat attributes (primitives and ",(0,s.jsx)(n.code,{children:"sets"}),"), updates completely override their current values:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"await PokemonEntity.build(UpdateItemCommand)\n  .item({\n    ...\n    // \ud83d\udc47 Set fields to desired values\n    isLegendary: true,\n    nextLevel: 42,\n    name: 'Pikachu',\n    binEncoded: new Uint8Array(...),\n    skills: new Set(['thunder'])\n  })\n  .send()\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Numbers benefit from additional ",(0,s.jsx)(n.code,{children:"$sum"}),", ",(0,s.jsx)(n.code,{children:"$subtract"})," and ",(0,s.jsx)(n.code,{children:"$add"})," extensions, which can use references:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  $add,\n  $subtract,\n  $get\n} from 'dynamodb-toolbox/entity/actions/update'\n\nawait PokemonEntity.build(UpdateItemCommand)\n  .item({\n    ...\n    // \ud83d\udc47 lose 20 health points\n    health: $subtract($get('health'), 20),\n    // \ud83d\udc47 gain 1 level\n    level: $sum($get('level', 0), 1),\n    // ...similar to\n    level: $add(1)\n  })\n  .send()\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Sets benefit from additional ",(0,s.jsx)(n.code,{children:"$add"})," and ",(0,s.jsx)(n.code,{children:"$delete"})," extensions, which can be used to add or remove specific values:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  $add,\n  $delete\n} from 'dynamodb-toolbox/entity/actions/update'\n\nawait PokemonEntity.build(UpdateItemCommand)\n  .item({\n    ...,\n    skills: $add(new Set(['thunder', 'dragon-tail'])),\n    types: $delete(new Set(['flight']))\n  })\n  .send()\n"})}),"\n",(0,s.jsx)(n.h3,{id:"deep-attributes",children:"Deep attributes"}),"\n",(0,s.jsxs)(n.p,{children:["In the case of deep attributes (e.g. ",(0,s.jsx)(n.code,{children:"lists"}),", ",(0,s.jsx)(n.code,{children:"maps"})," and ",(0,s.jsx)(n.code,{children:"records"}),"), updates are ",(0,s.jsx)(n.strong,{children:"partial by default"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// \ud83d\udc47 Partial overrides\nawait PokemonEntity.build(UpdateItemCommand)\n  .item({\n    ...\n    // \ud83d\udc47 Elements 0 and 2 are updated\n    skills: ['thunder', undefined, $remove()],\n    // ...similar to\n    skills: {\n      0: 'thunder',\n      2: $remove()\n    },\n    // \ud83d\udc47 Map\n    some: {\n      deep: {\n        field: 'foo'\n      }\n    },\n    // \ud83d\udc47 Record\n    bestSkillByType: {\n      electric: 'thunder',\n      flight: $remove()\n    }\n  })\n  .send()\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"$set"})," extension to specify a complete override:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { $set } from 'dynamodb-toolbox/entity/actions/update'\n\n// \ud83d\udc47 Complete overrides\nawait PokemonEntity.build(UpdateItemCommand).item({\n ...\n // Resets list\n skills: $set(['thunder']),\n // Removes all other map attributes\n some: $set({\n   deep: {\n     field: 'foo',\n     otherField: 42\n   }\n }),\n // Removes all other record keys\n bestSkillByType: $set({\n   electric: 'thunder'\n })\n})\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Lists benefit from additional ",(0,s.jsx)(n.code,{children:"$append"})," and ",(0,s.jsx)(n.code,{children:"$prepend"})," extensions, which can use references:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  $append,\n  $prepend\n} from 'dynamodb-toolbox/entity/actions/update'\n\nPokemonEntity.build(UpdateItemCommand).item({\n  ...\n  skills: $append(['thunder', 'dragon-tail']),\n  levelHistory: $append($get('level')),\n  types: $prepend(['flight']),\n})\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"$append"})," and ",(0,s.jsx)(n.code,{children:"$prepend"})," are ",(0,s.jsx)(n.strong,{children:"upserts"}),": they create a new list if the attribute is missing from the item."]})}),"\n",(0,s.jsx)(n.h3,{id:"options",children:(0,s.jsx)(n.code,{children:".options(...)"})}),"\n",(0,s.jsx)(n.p,{children:"Provides additional options:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"await PokemonEntity.build(UpdateItemCommand)\n  .item(...)\n  .options({\n    returnValues: 'UPDATED_OLD',\n    capacity: 'TOTAL',\n    ...\n  })\n  .send()\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"UpdateItemOptions"})," type to explicitly type an object as an ",(0,s.jsx)(n.code,{children:"UpdateItemCommand"})," options object:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import type { UpdateItemOptions } from 'dynamodb-toolbox/entity/actions/update'\n\nconst options: UpdateItemOptions<typeof PokemonEntity> = {\n  returnValues: 'UPDATED_OLD',\n  capacity: 'TOTAL',\n  ...\n}\n\nawait PokemonEntity.build(UpdateItemCommand)\n  .item(...)\n  .options(options)\n  .send()\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Available options (see the ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateItem.html#API_UpdateItem_RequestParameters",children:"DynamoDB documentation"})," for more details):"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Default"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"condition"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"Condition<typeof PokemonEntity>"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsxs)(n.td,{children:["A condition that must be satisfied in order for the ",(0,s.jsx)(n.code,{children:"UpdateItemCommand"})," to succeed.",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"See the ",(0,s.jsx)(n.a,{href:"/docs/entities/actions/parse-condition/#building-conditions",children:(0,s.jsx)(n.code,{children:"ConditionParser"})})," action for more details on how to write conditions."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"returnValues"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"ReturnValuesOption"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:'"NONE"'})}),(0,s.jsxs)(n.td,{children:["To get the item attributes as they appeared before they were updated with the request.",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"Possible values are ",(0,s.jsx)(n.code,{children:'"NONE"'}),", ",(0,s.jsx)(n.code,{children:'"UPDATED_NEW"'}),", ",(0,s.jsx)(n.code,{children:'"ALL_NEW"'}),", ",(0,s.jsx)(n.code,{children:'"UPDATED_OLD"'})," and ",(0,s.jsx)(n.code,{children:'"ALL_OLD"'}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsxs)("code",{children:["returnValuesOn",(0,s.jsx)("wbr",{}),"ConditionFalse"]})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"ReturnValuesOption"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:'"NONE"'})}),(0,s.jsxs)(n.td,{children:["To get the item attributes if the ",(0,s.jsx)(n.code,{children:"condition"})," fails.",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"Possible values are ",(0,s.jsx)(n.code,{children:'"NONE"'})," and ",(0,s.jsx)(n.code,{children:'"ALL_OLD"'}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"metrics"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"MetricsOption"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:'"NONE"'})}),(0,s.jsxs)(n.td,{children:["Determines whether item collection metrics are returned.",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"Possible values are ",(0,s.jsx)(n.code,{children:'"NONE"'})," and ",(0,s.jsx)(n.code,{children:'"SIZE"'}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"capacity"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"CapacityOption"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:'"NONE"'})}),(0,s.jsxs)(n.td,{children:["Determines the level of detail about provisioned or on-demand throughput consumption that is returned in the response.",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),"Possible values are ",(0,s.jsx)(n.code,{children:'"NONE"'}),", ",(0,s.jsx)(n.code,{children:'"TOTAL"'})," and ",(0,s.jsx)(n.code,{children:'"INDEXES"'}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"tableName"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsxs)(n.td,{children:["Overrides the ",(0,s.jsx)(n.code,{children:"Table"})," name. Mostly useful for ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Multitenancy",children:"multitenancy"}),"."]})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.admonition,{title:"Examples",type:"note",children:(0,s.jsxs)(a.A,{children:[(0,s.jsx)(d.A,{value:"basic",label:"Basic",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"await PokemonEntity.build(UpdateItemCommand)\n  .item({\n    pokemonId: 'pikachu1',\n    level: $add(1)\n  })\n  .send()\n"})})}),(0,s.jsx)(d.A,{value:"conditional",label:"Conditional",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"await PokemonEntity.build(UpdateItemCommand)\n  .item({\n    pokemonId: 'pikachu1',\n    level: $add(1)\n  })\n  .options({\n    // \ud83d\udc47 Makes sure that 'level' stays <= 99\n    condition: { attr: 'level', lt: 99 },\n    // \ud83d\udc47 Includes the Item in the error if not so\n    returnValuesOnConditionFalse: 'ALL_OLD'\n  })\n  .send()\n"})})}),(0,s.jsx)(d.A,{value:"return-values",label:"Return values",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const { Attributes: prevPikachu } =\n  await PokemonEntity.build(UpdateItemCommand)\n    .item({\n      pokemonId: 'pikachu1',\n      level: $add(1)\n    })\n    .options({ returnValues: 'ALL_OLD' })\n    .send()\n"})})}),(0,s.jsx)(d.A,{value:"multitenant",label:"Multitenant",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"await PokemonEntity.build(UpdateItemCommand)\n  .item({\n    pokemonId: 'pikachu1',\n    level: $add(1)\n  })\n  .options({ tableName: `tenant-${tenantId}-pokemons` })\n  .send()\n"})})}),(0,s.jsx)(d.A,{value:"aborted",label:"Aborted",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const abortController = new AbortController()\nconst abortSignal = abortController.signal\n\nawait PokemonEntity.build(UpdateItemCommand)\n  .item({\n    pokemonId: 'pikachu1',\n    level: $add(1)\n  })\n  .send({ abortSignal })\n\n// \ud83d\udc47 Aborts the command\nabortController.abort()\n"})})})]})}),"\n",(0,s.jsx)(n.h2,{id:"response",children:"Response"}),"\n",(0,s.jsxs)(n.p,{children:["The data is returned using the same response syntax as the ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateItem.html#API_UpdateItem_ResponseElements",children:"DynamoDB UpdateItem API"}),", with an additional ",(0,s.jsx)(n.code,{children:"ToolboxItem"})," property, which allows you to retrieve the item generated by DynamoDB-Toolbox:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const { ToolboxItem: generatedPokemon } =\n  await PokemonEntity.build(UpdateItemCommand)\n    .item(...)\n    .send()\n\n// \ud83d\udc47 Great for auto-generated attributes\nconst modifiedTimestamp = generatedPokemon.modified\n"})}),"\n",(0,s.jsx)(n.p,{children:"If present, the returned attributes are formatted by the Entity."}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"UpdateItemResponse"})," type to explicitly type an object as an ",(0,s.jsx)(n.code,{children:"UpdateItemCommand"})," response object:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import type { UpdateItemResponse } from 'dynamodb-toolbox/entity/actions/update'\n\nconst response: UpdateItemResponse<\n  typeof PokemonEntity,\n  // \ud83d\udc47 Optional options\n  { returnValues: 'ALL_OLD' }\n  // \ud83d\udc47 Typed as Pokemon\xa0| undefined\n> = { Attributes: ... }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"extended-syntax",children:"Extended Syntax"}),"\n",(0,s.jsxs)(n.p,{children:["In some contexts, like when defining ",(0,s.jsx)(n.a,{href:"/docs/schemas/defaults-and-links/",children:(0,s.jsx)(n.code,{children:"updateLinks"})}),", it may be useful to understand extended syntax in greater details."]}),"\n",(0,s.jsxs)(n.p,{children:["To avoid conflicts with regular syntax, extensions are defined through ",(0,s.jsx)(n.strong,{children:"objects"})," with ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",children:"symbols"})," as keys:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  $add,\n  // \ud83d\udc47 Unique symbols\n  $ADD,\n  $IS_EXTENSION\n} from 'dynamodb-toolbox/entity/actions/update/symbols'\n\nconst addOne = $add(1)\n\n// \ud83d\udc47 Equivalent to\nconst addOne = {\n  [$ADD]: 1,\n  [$IS_EXTENSION]: true\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If you need to build complex update links, ",(0,s.jsx)(n.strong,{children:"all those symbols are exported"}),", as well as ",(0,s.jsx)(n.strong,{children:"dedicated type guards"}),". If you don't, you can ",(0,s.jsx)(n.strong,{children:"exclude extended syntax"})," altogether with the ",(0,s.jsx)(n.code,{children:"isExtension"})," type guard."]}),"\n",(0,s.jsx)(n.p,{children:"Here's an example in which we automatically derive pokemon level upgrades:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  $add,\n  $get,\n  $subtract,\n  isAddition,\n  isExtension,\n  isGetting,\n  $ADD\n} from 'dynamodb-toolbox/entity/actions/update/symbols'\n\nconst pokemonSchema = item({\n  ...\n  level: number()\n}).and(prevSchema => ({\n  lastLevelUpgrade: number().updateLink<typeof prevSchema>(\n    ({ level }) => {\n      if (level === undefined) {\n        return undefined\n      }\n\n      if (isAddition(level)) {\n        return level[$ADD]\n      }\n\n      if (!isExtension(level) || isGetting(level)) {\n        return $subtract(level, $get('level'))\n      }\n    }\n  )\n}))\n\nawait PokemonEntity.build(UpdateItemCommand)\n  .item({\n    pokemonId,\n    // \ud83d\udc47 lastLevelUpgrade = 3\n    level: $add(3)\n    // \ud83d\udc47 lastLevelUpgrade = $subtract(10, $get('level'))\n    level: 10,\n    // \ud83d\udc47 lastLevelUpgrade = $subtract($get('otherAttr'), $get('level'))\n    level: $get('otherAttr'),\n  })\n  .send()\n"})}),"\n",(0,s.jsxs)(n.admonition,{title:"Example",type:"note",children:[(0,s.jsxs)(t,{className:"details-in-admonition",children:[(0,s.jsxs)("summary",{children:["\ud83d\udd0e ",(0,s.jsx)("b",{children:"$remove"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  $remove,\n  $REMOVE,\n  $IS_EXTENSION,\n  isRemoval\n} from 'dynamodb-toolbox/entity/actions/update/symbols'\n\nconst removal = $remove()\n\n// \ud83d\udc47 Equivalent to\nconst removal = {\n  [$REMOVE]: true,\n  [$IS_EXTENSION]: true\n}\n\nconst link = (input: UpdateItemInput) => {\n  if (isRemoval(input)) {\n    input[$REMOVE] // => true\n  }\n}\n"})})]}),(0,s.jsxs)(t,{className:"details-in-admonition",children:[(0,s.jsxs)("summary",{children:["\ud83d\udd0e ",(0,s.jsx)("b",{children:"$get"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  $get,\n  $GET,\n  $IS_EXTENSION,\n  isGetting\n} from 'dynamodb-toolbox/entity/actions/update/symbols'\n\nconst getting = $get('attr', 'fallback')\n\n// \ud83d\udc47 Equivalent to\nconst getting = {\n  [$GET]: ['attr', 'fallback'],\n  [$IS_EXTENSION]: true\n}\n\nconst link = (input: UpdateItemInput) => {\n  if (isGetting(input)) {\n    input[$GET] // => ['attr', 'fallback']\n  }\n}\n"})})]}),(0,s.jsxs)(t,{className:"details-in-admonition",children:[(0,s.jsxs)("summary",{children:["\ud83d\udd0e ",(0,s.jsx)("b",{children:"$sum"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  $sum,\n  $SUM,\n  $IS_EXTENSION,\n  isSum\n} from 'dynamodb-toolbox/entity/actions/update/symbols'\n\nconst sum = $sum(1, 2)\n\n// \ud83d\udc47 Equivalent to\nconst sum = {\n  [$SUM]: [1, 2],\n  [$IS_EXTENSION]: true\n}\n\nconst link = (input: UpdateItemInput) => {\n  if (isSum(input)) {\n    input[$SUM] // => [1, 2]\n  }\n}\n"})})]}),(0,s.jsxs)(t,{className:"details-in-admonition",children:[(0,s.jsxs)("summary",{children:["\ud83d\udd0e ",(0,s.jsx)("b",{children:"$subtract"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  $subtract,\n  $SUBTRACT,\n  $IS_EXTENSION,\n  isSubtraction\n} from 'dynamodb-toolbox/entity/actions/update/symbols'\n\nconst subtraction = $subtract(1, 2)\n\n// \ud83d\udc47 Equivalent to\nconst subtraction = {\n  [$SUBTRACT]: [1, 2],\n  [$IS_EXTENSION]: true\n}\n\nconst link = (input: UpdateItemInput) => {\n  if (isSubtraction(input)) {\n    input[$SUBTRACT] // => [1, 2]\n  }\n}\n"})})]}),(0,s.jsxs)(t,{className:"details-in-admonition",children:[(0,s.jsxs)("summary",{children:["\ud83d\udd0e ",(0,s.jsx)("b",{children:"$add"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  $add,\n  $ADD,\n  $IS_EXTENSION,\n  isAddition\n} from 'dynamodb-toolbox/entity/actions/update/symbols'\n\nconst addition = $add(1)\n\n// \ud83d\udc47 Equivalent to\nconst addition = {\n  [$ADD]: 1,\n  [$IS_EXTENSION]: true\n}\n\nconst link = (input: UpdateItemInput) => {\n  if (isAddition(input)) {\n    input[$ADD] // => 1\n  }\n}\n"})})]}),(0,s.jsxs)(t,{className:"details-in-admonition",children:[(0,s.jsxs)("summary",{children:["\ud83d\udd0e ",(0,s.jsx)("b",{children:"$delete"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  $delete,\n  $DELETE,\n  $IS_EXTENSION,\n  isDeletion\n} from 'dynamodb-toolbox/entity/actions/update/symbols'\n\nconst deletion = $delete(new Set(['flight']))\n\n// \ud83d\udc47 Equivalent to\nconst deletion = {\n  [$DELETE]: new Set(['flight']),\n  [$IS_EXTENSION]: true\n}\n\nconst link = (input: UpdateItemInput) => {\n  if (isDeletion(input)) {\n    input[$DELETE] // => new Set(['flight'])\n  }\n}\n"})})]}),(0,s.jsxs)(t,{className:"details-in-admonition",children:[(0,s.jsxs)("summary",{children:["\ud83d\udd0e ",(0,s.jsx)("b",{children:"$set"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  $set,\n  $SET,\n  $IS_EXTENSION,\n  isSetting\n} from 'dynamodb-toolbox/entity/actions/update/symbols'\n\nconst setting = $set({\n  deep: {\n    field: 'foo',\n    otherField: 42\n  }\n})\n\n// \ud83d\udc47 Equivalent to\nconst setting = {\n  [$SET]: {\n    deep: {\n      field: 'foo',\n      otherField: 42\n    }\n  },\n  [$IS_EXTENSION]: true\n}\n\nconst link = (input: UpdateItemInput) => {\n  if (isSetting(input)) {\n    input[$SET] // => {\n    //   deep: {\n    //     field: 'foo',\n    //     otherField: 42\n    //   }\n    // }\n  }\n}\n"})})]}),(0,s.jsxs)(t,{className:"details-in-admonition",children:[(0,s.jsxs)("summary",{children:["\ud83d\udd0e ",(0,s.jsx)("b",{children:"$append"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  $append,\n  $APPEND,\n  $IS_EXTENSION,\n  isAppending\n} from 'dynamodb-toolbox/entity/actions/update/symbols'\n\nconst appending = $append(['thunder', 'dragon-tail'])\n\n// \ud83d\udc47 Equivalent to\nconst appending = {\n  [$APPEND]: ['thunder', 'dragon-tail'],\n  [$IS_EXTENSION]: true\n}\n\nconst link = (input: UpdateItemInput) => {\n  if (isAppending(input)) {\n    input[$APPEND] // => ['thunder', 'dragon-tail']\n  }\n}\n"})})]}),(0,s.jsxs)(t,{className:"details-in-admonition",children:[(0,s.jsxs)("summary",{children:["\ud83d\udd0e ",(0,s.jsx)("b",{children:"$prepend"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  $prepend,\n  $PREPEND,\n  $IS_EXTENSION,\n  isPrepending\n} from 'dynamodb-toolbox/entity/actions/update/symbols'\n\nconst prepending = $prepend(['thunder', 'dragon-tail'])\n\n// \ud83d\udc47 Equivalent to\nconst prepending = {\n  [$PREPEND]: ['thunder', 'dragon-tail'],\n  [$IS_EXTENSION]: true\n}\n\nconst link = (input: UpdateItemInput) => {\n  if (isPrepending(input)) {\n    input[$PREPEND] // => ['thunder', 'dragon-tail']\n  }\n}\n"})})]})]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>d});t(6540);var s=t(8215);const i={tabItem:"tabItem_Ymn6"};var a=t(4848);function d(e){let{children:n,hidden:t,className:d}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,s.A)(i.tabItem,d),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>I});var s=t(6540),i=t(8215),a=t(3104),d=t(6347),o=t(205),r=t(7485),l=t(1682),c=t(679);function m(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return m(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:i}}=e;return{value:n,label:t,attributes:s,default:i}}))}(t);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const i=(0,d.W6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,r.aZ)(a),(0,s.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(i.location.search);n.set(a,e),i.replace({...i.location,search:n.toString()})}),[a,i])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,a=u(e),[d,r]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:a}))),[l,m]=h({queryString:t,groupId:i}),[x,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,a]=(0,c.Dv)(t);return[i,(0,s.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:i}),j=(()=>{const e=l??x;return p({value:e,tabValues:a})?e:null})();(0,o.A)((()=>{j&&r(j)}),[j]);return{selectedValue:d,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);r(e),m(e),b(e)}),[m,b,a]),tabValues:a}}var b=t(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=t(4848);function f(e){let{className:n,block:t,selectedValue:s,selectValue:d,tabValues:o}=e;const r=[],{blockElementScrollPositionUntilNextRender:l}=(0,a.a_)(),c=e=>{const n=e.currentTarget,t=r.indexOf(n),i=o[t].value;i!==s&&(l(n),d(i))},m=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=r.indexOf(e.currentTarget)+1;n=r[t]??r[0];break}case"ArrowLeft":{const t=r.indexOf(e.currentTarget)-1;n=r[t]??r[r.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>r.push(e),onKeyDown:m,onClick:c,...a,className:(0,i.A)("tabs__item",j.tabItem,a?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function g(e){let{lazy:n,children:t,selectedValue:a}=e;const d=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=d.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:d.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function v(e){const n=x(e);return(0,y.jsxs)("div",{className:(0,i.A)("tabs-container",j.tabList),children:[(0,y.jsx)(f,{...n,...e}),(0,y.jsx)(g,{...n,...e})]})}function I(e){const n=(0,b.A)();return(0,y.jsx)(v,{...e,children:m(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var s=t(6540);const i={},a=s.createContext(i);function d(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);