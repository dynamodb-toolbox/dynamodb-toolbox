"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5671],{28453:(e,r,s)=>{s.d(r,{R:()=>o,x:()=>a});var n=s(96540);const t={},i=n.createContext(t);function o(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(i.Provider,{value:r},e.children)}},69016:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>f});const n=JSON.parse('{"id":"schemas/transformers/prefix","title":"prefix","description":"Prefixes a string attribute value:","source":"@site/docs/4-schemas/18-transformers/2-prefix.md","sourceDirName":"4-schemas/18-transformers","slug":"/schemas/transformers/prefix","permalink":"/docs/schemas/transformers/prefix","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"prefix","sidebar_custom_props":{"code":true}},"sidebar":"tutorialSidebar","previous":{"title":"Usage","permalink":"/docs/schemas/transformers/usage"},"next":{"title":"suffix","permalink":"/docs/schemas/transformers/suffix"}}');var t=s(74848),i=s(28453);const o={title:"prefix",sidebar_custom_props:{code:!0}},a="Prefix",c={},f=[];function d(e){const r={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"prefix",children:"Prefix"})}),"\n",(0,t.jsx)(r.p,{children:"Prefixes a string attribute value:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"import { prefix } from 'dynamodb-toolbox/transformers/prefix'\n\nconst prefixer = prefix('PREFIX')\nconst prefixedSchema = string().transform(prefixer)\n\nprefixer.encode('foo') // => 'PREFIX#foo'\nprefixer.decode('PREFIX#bar') // => 'bar'\n// \ud83d\udc47 Passthrough if prefix is missing\nprefixer.decode('bar') // => 'bar'\n"})}),"\n",(0,t.jsxs)(r.p,{children:["The default delimiter is ",(0,t.jsx)(r.code,{children:"#"}),", but you can override it:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"const prefixer = prefix('PREFIX', { delimiter: '/' })\n\nprefixer.encode('foo') // => 'PREFIX/foo'\n"})}),"\n",(0,t.jsxs)(r.p,{children:["You can ",(0,t.jsx)(r.a,{href:"/docs/schemas/transformers/pipe",children:"pipe"})," a ",(0,t.jsx)(r.code,{children:"string"})," transformer with the ",(0,t.jsx)(r.code,{children:".pipe(...)"})," method:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:"import { suffix } from 'dynamodb-toolbox/transformers/suffix'\n\nconst piped = prefix('PREFIX').pipe(suffix('SUFFIX'))\nconst schema = string().transform(piped)\n"})})]})}function p(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);