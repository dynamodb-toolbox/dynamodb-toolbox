"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3977],{8569:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>h});var r=a(4848),s=a(8453),t=a(1470),i=a(9365);const l={title:"binary",sidebar_custom_props:{code:!0}},c="Binary",o={id:"schemas/binary/index",title:"binary",description:"Describes binary values:",source:"@site/docs/4-schemas/10-binary/index.md",sourceDirName:"4-schemas/10-binary",slug:"/schemas/binary/",permalink:"/docs/schemas/binary/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"binary",sidebar_custom_props:{code:!0}},sidebar:"tutorialSidebar",previous:{title:"string",permalink:"/docs/schemas/string/"},next:{title:"set",permalink:"/docs/schemas/set/"}},d={},h=[{value:"Options",id:"options",level:2},{value:"<code>.required()</code>",id:"required",level:3},{value:"<code>.hidden()</code>",id:"hidden",level:3},{value:"<code>.key()</code>",id:"key",level:3},{value:"<code>.savedAs(...)</code>",id:"savedas",level:3},{value:"<code>.enum(...)</code>",id:"enum",level:3},{value:"<code>.transform(...)</code>",id:"transform",level:3},{value:"<code>.default(...)</code>",id:"default",level:3},{value:"<code>.link&lt;Schema&gt;(...)</code>",id:"linkschema",level:3},{value:"<code>.validate(...)</code>",id:"validate",level:3}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"binary",children:"Binary"})}),"\n",(0,r.jsxs)(n.p,{children:["Describes ",(0,r.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes",children:(0,r.jsx)(n.strong,{children:"binary values"})}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { binary } from 'dynamodb-toolbox/schema/binary'\n\nconst hashSchema = binary()\n\ntype Hash = FormattedValue<typeof hashSchema>\n// => Uint8Array\n"})}),"\n",(0,r.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(n.h3,{id:"required",children:(0,r.jsx)(n.code,{children:".required()"})}),"\n",(0,r.jsx)("p",{style:{marginTop:"-15px"},children:(0,r.jsx)("i",{children:(0,r.jsx)("code",{children:"string | undefined"})})}),"\n",(0,r.jsxs)(n.p,{children:["Tags schema values as ",(0,r.jsx)(n.strong,{children:"required"})," (within ",(0,r.jsx)(n.a,{href:"/docs/schemas/item/",children:(0,r.jsx)(n.code,{children:"items"})})," or ",(0,r.jsx)(n.a,{href:"/docs/schemas/map/",children:(0,r.jsx)(n.code,{children:"maps"})}),"). Possible values are:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)("code",{children:["'atLeastOnce' ",(0,r.jsx)("i",{children:"(default)"})]}),": Required (starting value)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"'always'"}),": Always required (including updates)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"'never'"}),": Optional"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Equivalent\nconst hashSchema = binary()\nconst hashSchema = binary().required()\nconst hashSchema = binary({ required: 'atLeastOnce' })\n\n// shorthand for `.required('never')`\nconst hashSchema = binary().optional()\nconst hashSchema = binary({ required: 'never' })\n"})}),"\n",(0,r.jsx)(n.h3,{id:"hidden",children:(0,r.jsx)(n.code,{children:".hidden()"})}),"\n",(0,r.jsx)("p",{style:{marginTop:"-15px"},children:(0,r.jsx)("i",{children:(0,r.jsx)("code",{children:"boolean | undefined"})})}),"\n",(0,r.jsxs)(n.p,{children:["Omits schema values during ",(0,r.jsx)(n.a,{href:"/docs/schemas/actions/format",children:"formatting"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const hashSchema = binary().hidden()\nconst hashSchema = binary({ hidden: true })\n"})}),"\n",(0,r.jsx)(n.h3,{id:"key",children:(0,r.jsx)(n.code,{children:".key()"})}),"\n",(0,r.jsx)("p",{style:{marginTop:"-15px"},children:(0,r.jsx)("i",{children:(0,r.jsx)("code",{children:"boolean | undefined"})})}),"\n",(0,r.jsx)(n.p,{children:"Tags schema values as a primary key attribute or linked to a primary key attribute:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"// Note: The method also sets the `required` property to 'always'\n// (it is often the case in practice, you can still use `.optional()` if needed)\nconst hashSchema = binary().key()\nconst hashSchema = binary({\n  key: true,\n  required: 'always'\n})\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"key()"})," is not restricted to the primary key attributes but also to the attributes they are be linked to."]})}),"\n",(0,r.jsx)(n.h3,{id:"savedas",children:(0,r.jsx)(n.code,{children:".savedAs(...)"})}),"\n",(0,r.jsx)("p",{style:{marginTop:"-15px"},children:(0,r.jsx)("i",{children:(0,r.jsx)("code",{children:"string"})})}),"\n",(0,r.jsxs)(n.p,{children:["Renames schema values during the ",(0,r.jsx)(n.a,{href:"/docs/schemas/actions/parse",children:"transformation step"})," (within ",(0,r.jsx)(n.a,{href:"/docs/schemas/item/",children:(0,r.jsx)(n.code,{children:"items"})})," or ",(0,r.jsx)(n.a,{href:"/docs/schemas/map/",children:(0,r.jsx)(n.code,{children:"maps"})}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const hashSchema = binary().savedAs('h')\nconst hashSchema = binary({ savedAs: 'h' })\n"})}),"\n",(0,r.jsx)(n.h3,{id:"enum",children:(0,r.jsx)(n.code,{children:".enum(...)"})}),"\n",(0,r.jsx)("p",{style:{marginTop:"-15px"},children:(0,r.jsx)("i",{children:(0,r.jsx)("code",{children:"Uint8Array[]"})})}),"\n",(0,r.jsx)(n.p,{children:"Provides a finite range of possible values:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const binA = new Uint8Array([1, 2, 3])\nconst binB = new Uint8Array([4, 5, 6])\n\nconst hashSchema = binary().enum(binA, binB, ...)\n\n// \ud83d\udc47 Equivalent to `.enum(binA).default(binA)`\nconst hashSchema = binary().const(binA)\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["For type inference reasons, the ",(0,r.jsx)(n.code,{children:"enum"})," option is only available as a method and not as input props."]})}),"\n",(0,r.jsx)(n.h3,{id:"transform",children:(0,r.jsx)(n.code,{children:".transform(...)"})}),"\n",(0,r.jsx)("p",{style:{marginTop:"-15px"},children:(0,r.jsx)("i",{children:(0,r.jsx)("code",{children:"Transformer<Uint8Array>"})})}),"\n",(0,r.jsxs)(n.p,{children:["Allows modifying schema values during the ",(0,r.jsx)(n.a,{href:"/docs/schemas/actions/parse",children:"transformation step"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const PREFIX = new Uint8Array([1, 2, 3])\n\nconst prefix = {\n  parse: (input: Uint8Array) => {\n    const concat = new Uint8Array(\n      PREFIX.length + input.length\n    )\n    concat.set(PREFIX)\n    concat.set(input, PREFIX.length)\n\n    return concat\n  },\n  format: (saved: Uint8Array) => saved.slice(PREFIX.length)\n}\n\n// Prefixes the value\nconst hashSchema = binary().transform(prefix)\nconst hashSchema = binary({ transform: prefix })\n"})}),"\n",(0,r.jsxs)(n.p,{children:["DynamoDB-Toolbox exposes ",(0,r.jsx)(n.a,{href:"/docs/schemas/transformers/usage",children:"on-the-shelf transformers"}),", so feel free to use them!"]}),"\n",(0,r.jsx)(n.h3,{id:"default",children:(0,r.jsx)(n.code,{children:".default(...)"})}),"\n",(0,r.jsx)("p",{style:{marginTop:"-15px"},children:(0,r.jsx)("i",{children:(0,r.jsx)("code",{children:"ValueOrGetter<Uint8Array>"})})}),"\n",(0,r.jsxs)(n.p,{children:["Specifies default values. See ",(0,r.jsx)(n.a,{href:"/docs/schemas/defaults-and-links/",children:"Defaults and Links"})," for more details:"]}),"\n",(0,r.jsx)(n.admonition,{title:"Examples",type:"note",children:(0,r.jsxs)(t.A,{children:[(0,r.jsx)(i.A,{value:"put",label:"Put",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const bin = new Uint8Array([1, 2, 3])\n\nconst hashSchema = binary().default(bin)\n// \ud83d\udc47 Similar to\nconst hashSchema = binary().putDefault(bin)\n// \ud83d\udc47 ...or\nconst hashSchema = binary({ putDefault: bin })\n\n// \ud83d\ude4c Getters also work!\nconst hashSchema = binary().default(() => bin)\n"})})}),(0,r.jsx)(i.A,{value:"key",label:"Key",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const bin = new Uint8Array([1, 2, 3])\n\nconst hashSchema = binary().key().default(bin)\n// \ud83d\udc47 Similar to\nconst hashSchema = binary().key().keyDefault(bin)\n// \ud83d\udc47 ...or\nconst hashSchema = binary({\n  key: true,\n  required: 'always',\n  keyDefault: bin\n})\n"})})}),(0,r.jsx)(i.A,{value:"update",label:"Update",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const bin = new Uint8Array([1, 2, 3])\n\nconst hashSchema = binary().updateDefault(bin)\n// \ud83d\udc47 Similar to\nconst hashSchema = binary({ updateDefault: bin })\n"})})})]})}),"\n",(0,r.jsx)(n.h3,{id:"linkschema",children:(0,r.jsx)(n.code,{children:".link<Schema>(...)"})}),"\n",(0,r.jsx)("p",{style:{marginTop:"-15px"},children:(0,r.jsx)("i",{children:(0,r.jsx)("code",{children:"Link<SCHEMA, Uint8Array>"})})}),"\n",(0,r.jsxs)(n.p,{children:["Similar to ",(0,r.jsx)(n.a,{href:"#default",children:(0,r.jsx)(n.code,{children:".default(...)"})})," but allows deriving the default value from other attributes. See ",(0,r.jsx)(n.a,{href:"/docs/schemas/defaults-and-links/",children:"Defaults and Links"})," for more details:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const encoder = new TextEncoder()\n\nconst pokemonSchema = item({\n  name: string()\n}).and(prevSchema => ({\n  nameHash: binary().link<typeof prevSchema>(\n    // \ud83d\ude4c Correctly typed!\n    item => encoder.encode(item.name)\n  )\n}))\n"})}),"\n",(0,r.jsx)(n.h3,{id:"validate",children:(0,r.jsx)(n.code,{children:".validate(...)"})}),"\n",(0,r.jsx)("p",{style:{marginTop:"-15px"},children:(0,r.jsx)("i",{children:(0,r.jsx)("code",{children:"Validator<Uint8Array>"})})}),"\n",(0,r.jsxs)(n.p,{children:["Adds custom validation. See ",(0,r.jsx)(n.a,{href:"/docs/schemas/custom-validation/",children:"Custom Validation"})," for more details:"]}),"\n",(0,r.jsx)(n.admonition,{title:"Examples",type:"note",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const longBinSchema = binary().validate(\n  input => input.length > 3\n)\n// \ud83d\udc47 Similar to\nconst longBinSchema = binary().putValidate(\n  input => input.length > 3\n)\n// \ud83d\udc47 ...or\nconst longBinSchema = binary({\n  putValidator: input => input.length > 3\n})\n"})})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9365:(e,n,a)=>{a.d(n,{A:()=>i});a(6540);var r=a(8215);const s={tabItem:"tabItem_Ymn6"};var t=a(4848);function i(e){let{children:n,hidden:a,className:i}=e;return(0,t.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,i),hidden:a,children:n})}},1470:(e,n,a)=>{a.d(n,{A:()=>S});var r=a(6540),s=a(8215),t=a(3104),i=a(6347),l=a(205),c=a(7485),o=a(1682),d=a(679);function h(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:a}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:a,attributes:r,default:s}}=e;return{value:n,label:a,attributes:r,default:s}}))}(a);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function m(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:a}=e;const s=(0,i.W6)(),t=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,c.aZ)(t),(0,r.useCallback)((e=>{if(!t)return;const n=new URLSearchParams(s.location.search);n.set(t,e),s.replace({...s.location,search:n.toString()})}),[t,s])]}function x(e){const{defaultValue:n,queryString:a=!1,groupId:s}=e,t=u(e),[i,c]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:t}))),[o,h]=p({queryString:a,groupId:s}),[x,b]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,t]=(0,d.Dv)(a);return[s,(0,r.useCallback)((e=>{a&&t.set(e)}),[a,t])]}({groupId:s}),f=(()=>{const e=o??x;return m({value:e,tabValues:t})?e:null})();(0,l.A)((()=>{f&&c(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),b(e)}),[h,b,t]),tabValues:t}}var b=a(2303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=a(4848);function j(e){let{className:n,block:a,selectedValue:r,selectValue:i,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:o}=(0,t.a_)(),d=e=>{const n=e.currentTarget,a=c.indexOf(n),s=l[a].value;s!==r&&(o(n),i(s))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;n=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;n=c[a]??c[c.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":a},n),children:l.map((e=>{let{value:n,label:a,attributes:t}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>c.push(e),onKeyDown:h,onClick:d,...t,className:(0,s.A)("tabs__item",f.tabItem,t?.className,{"tabs__item--active":r===n}),children:a??n},n)}))})}function v(e){let{lazy:n,children:a,selectedValue:t}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===t));return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function g(e){const n=x(e);return(0,y.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,y.jsx)(j,{...n,...e}),(0,y.jsx)(v,{...n,...e})]})}function S(e){const n=(0,b.A)();return(0,y.jsx)(g,{...e,children:h(e.children)},String(n))}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var r=a(6540);const s={},t=r.createContext(s);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);