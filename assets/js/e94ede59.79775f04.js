"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8659],{5044:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=n(4848),s=n(8453),i=n(1470),r=n(9365);const o={title:"TransactUpdate",sidebar_custom_props:{sidebarActionType:"write"}},c="UpdateTransaction",l={id:"entities/actions/transact-update/index",title:"TransactUpdate",description:"Builds a transaction to update an entity item, to be used within TransactWriteItems operations:",source:"@site/docs/3-entities/4-actions/13-transact-update/index.md",sourceDirName:"3-entities/4-actions/13-transact-update",slug:"/entities/actions/transact-update/",permalink:"/docs/entities/actions/transact-update/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"TransactUpdate",sidebar_custom_props:{sidebarActionType:"write"}},sidebar:"tutorialSidebar",previous:{title:"TransactPut",permalink:"/docs/entities/actions/transact-put/"},next:{title:"TransactDelete",permalink:"/docs/entities/actions/transact-delete/"}},d={},u=[{value:"Request",id:"request",level:2},{value:"<code>.item(...)</code>",id:"item",level:3},{value:"<code>.options(...)</code>",id:"options",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"updatetransaction",children:"UpdateTransaction"})}),"\n",(0,a.jsxs)(t.p,{children:["Builds a transaction to update an entity item, to be used within ",(0,a.jsx)(t.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_TransactWriteItems.html",children:"TransactWriteItems operations"}),":"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"import { execute } from 'dynamodb-toolbox/entity/actions/transactWrite'\nimport { UpdateTransaction } from 'dynamodb-toolbox/entity/actions/transactUpdate'\n\nconst transaction = PokemonEntity.build(UpdateTransaction)\n\nconst params = transaction.params()\nawait execute(transaction, ...otherTransactions)\n"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"UpdateTransactions"})," can be executed in conjunction with ",(0,a.jsx)(t.a,{href:"/docs/entities/actions/transact-put/",children:(0,a.jsx)(t.code,{children:"PutTransactions"})}),", ",(0,a.jsx)(t.a,{href:"/docs/entities/actions/transact-delete/",children:(0,a.jsx)(t.code,{children:"DeleteTransactions"})})," and ",(0,a.jsx)(t.a,{href:"/docs/entities/actions/condition-check/",children:(0,a.jsx)(t.code,{children:"ConditionChecks"})}),"."]}),"\n",(0,a.jsx)(t.admonition,{type:"info",children:(0,a.jsxs)(t.p,{children:["Check the ",(0,a.jsx)(t.a,{href:"/docs/entities/actions/transactions/#transactwrite",children:"Transaction Documentation"})," to learn more about the ",(0,a.jsx)(t.code,{children:"execute"})," function."]})}),"\n",(0,a.jsx)(t.h2,{id:"request",children:"Request"}),"\n",(0,a.jsx)(t.h3,{id:"item",children:(0,a.jsx)(t.code,{children:".item(...)"})}),"\n",(0,a.jsx)("p",{style:{marginTop:"-15px"},children:(0,a.jsx)("i",{children:"(required)"})}),"\n",(0,a.jsx)(t.p,{children:"The attributes to update, including the key:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"import { $add } from 'dynamodb-toolbox/entity/actions/update'\n\nconst transaction = PokemonEntity.build(UpdateTransaction)\n  .item({\n    pokemonId: 'pikachu1',\n    level: $add(1),\n    ...\n  })\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Check the ",(0,a.jsx)(t.a,{href:"/docs/entities/actions/update-item/",children:(0,a.jsx)(t.code,{children:"UpdateItemCommand"})})," action to learn more about the ",(0,a.jsx)(t.code,{children:"UpdateItem"})," syntax. You can use the ",(0,a.jsx)(t.code,{children:"UpdateItemInput"})," type to explicitly type an object as an ",(0,a.jsx)(t.code,{children:"UpdateTransaction"})," item object:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"import type { UpdateItemInput } from 'dynamodb-toolbox/entity/actions/update'\n\nconst item: UpdateItemInput<typeof PokemonEntity> = {\n  pokemonId: 'pikachu1',\n  level: $add(1),\n  ...\n}\n\nconst transaction = PokemonEntity.build(\n  UpdateTransaction\n).item(item)\n"})}),"\n",(0,a.jsx)(t.h3,{id:"options",children:(0,a.jsx)(t.code,{children:".options(...)"})}),"\n",(0,a.jsx)(t.p,{children:"Provides additional options:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"const transaction = PokemonEntity.build(UpdateTransaction)\n  .item({\n    pokemonId: 'pikachu1',\n    level: $add(1),\n    ...\n  })\n  .options({\n    // \ud83d\udc47 Make sure that 'level' stays <= 99\n    condition: { attr: 'level', lt: 99 }\n  })\n"})}),"\n",(0,a.jsxs)(t.p,{children:["You can use the ",(0,a.jsx)(t.code,{children:"UpdateTransactionOptions"})," type to explicitly type an object as a ",(0,a.jsx)(t.code,{children:"UpdateTransaction"})," options object:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"import type { UpdateTransactionOptions } from 'dynamodb-toolbox/entity/actions/transactUpdate'\n\nconst options: UpdateTransactionOptions<\n  typeof PokemonEntity\n> = {\n  condition: { attr: 'level', lt: 99 }\n}\n\nconst transaction = PokemonEntity.build(UpdateTransaction)\n  .item(...)\n  .options(options)\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Available options (see the ",(0,a.jsx)(t.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_TransactWriteItems.html#API_TransactWriteItems_RequestParameters",children:"DynamoDB documentation"})," for more details):"]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Option"}),(0,a.jsx)(t.th,{style:{textAlign:"center"},children:"Type"}),(0,a.jsx)(t.th,{style:{textAlign:"center"},children:"Default"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"condition"})}),(0,a.jsx)(t.td,{style:{textAlign:"center"},children:(0,a.jsx)(t.code,{children:"Condition<typeof PokemonEntity>"})}),(0,a.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,a.jsxs)(t.td,{children:["A condition that must be satisfied in order for the ",(0,a.jsx)(t.code,{children:"UpdateTransaction"})," to succeed.",(0,a.jsx)("br",{}),(0,a.jsx)("br",{}),"See the ",(0,a.jsx)(t.a,{href:"/docs/entities/actions/parse-condition/#building-conditions",children:(0,a.jsx)(t.code,{children:"ConditionParser"})})," action for more details on how to write conditions."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsxs)("code",{children:["returnValuesOn",(0,a.jsx)("wbr",{}),"ConditionFalse"]})}),(0,a.jsx)(t.td,{style:{textAlign:"center"},children:(0,a.jsx)(t.code,{children:"ReturnValuesOption"})}),(0,a.jsx)(t.td,{style:{textAlign:"center"},children:(0,a.jsx)(t.code,{children:'"NONE"'})}),(0,a.jsxs)(t.td,{children:["To get the item attributes if the ",(0,a.jsx)(t.code,{children:"condition"})," fails.",(0,a.jsx)("br",{}),(0,a.jsx)("br",{}),"Possible values are ",(0,a.jsx)(t.code,{children:'"NONE"'})," and ",(0,a.jsx)(t.code,{children:'"ALL_OLD"'}),"."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"tableName"})}),(0,a.jsx)(t.td,{style:{textAlign:"center"},children:(0,a.jsx)(t.code,{children:"string"})}),(0,a.jsx)(t.td,{style:{textAlign:"center"},children:"-"}),(0,a.jsxs)(t.td,{children:["Overrides the ",(0,a.jsx)(t.code,{children:"Table"})," name. Mostly useful for ",(0,a.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Multitenancy",children:"multitenancy"}),"."]})]})]})]}),"\n",(0,a.jsx)(t.admonition,{title:"Examples",type:"note",children:(0,a.jsxs)(i.A,{children:[(0,a.jsx)(r.A,{value:"condition",label:"Conditional write",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"PokemonEntity.build(UpdateTransaction)\n  .item(...)\n  .options({\n    // \ud83d\udc47 Makes sure that 'level' stays <= 99\n    condition: { attr: 'level', lt: 99 },\n    // \ud83d\udc47 Includes the Item in the error if not so\n    returnValuesOnConditionFalse: 'ALL_OLD'\n  })\n"})})}),(0,a.jsx)(r.A,{value:"multitenant",label:"Multitenant",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"PokemonEntity.build(UpdateTransaction)\n  .item(...)\n  .options({\n    tableName: `tenant-${tenantId}-pokemons`\n  })\n"})})})]})}),"\n",(0,a.jsx)(t.admonition,{type:"info",children:(0,a.jsxs)(t.p,{children:["Contrary to ",(0,a.jsx)(t.a,{href:"/docs/entities/actions/update-item/",children:(0,a.jsx)(t.code,{children:"UpdateItemCommands"})}),", update transactions cannot return the previous or new values of the written items."]})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>r});n(6540);var a=n(8215);const s={tabItem:"tabItem_Ymn6"};var i=n(4848);function r(e){let{children:t,hidden:n,className:r}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,r),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>T});var a=n(6540),s=n(8215),i=n(3104),r=n(6347),o=n(205),c=n(7485),l=n(1682),d=n(679);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:s}}=e;return{value:t,label:n,attributes:a,default:s}}))}(n);return function(e){const t=(0,l.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const s=(0,r.W6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,c.aZ)(i),(0,a.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(s.location.search);t.set(i,e),s.replace({...s.location,search:t.toString()})}),[i,s])]}function x(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,i=h(e),[r,c]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[l,u]=m({queryString:n,groupId:s}),[x,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,i]=(0,d.Dv)(n);return[s,(0,a.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:s}),j=(()=>{const e=l??x;return p({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{j&&c(j)}),[j]);return{selectedValue:r,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),b(e)}),[u,b,i]),tabValues:i}}var b=n(2303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=n(4848);function y(e){let{className:t,block:n,selectedValue:a,selectValue:r,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),s=o[n].value;s!==a&&(l(t),r(s))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t),children:o.map((e=>{let{value:t,label:n,attributes:i}=e;return(0,f.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>c.push(e),onKeyDown:u,onClick:d,...i,className:(0,s.A)("tabs__item",j.tabItem,i?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function v(e){let{lazy:t,children:n,selectedValue:i}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===i));return e?(0,a.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==i})))})}function g(e){const t=x(e);return(0,f.jsxs)("div",{className:(0,s.A)("tabs-container",j.tabList),children:[(0,f.jsx)(y,{...t,...e}),(0,f.jsx)(v,{...t,...e})]})}function T(e){const t=(0,b.A)();return(0,f.jsx)(g,{...e,children:u(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var a=n(6540);const s={},i=a.createContext(s);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);