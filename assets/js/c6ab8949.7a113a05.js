"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9841],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var s=t(96540);const i={},r=s.createContext(i);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(r.Provider,{value:n},e.children)}},35211:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"entities/actions/access-pattern/index","title":"AccessPattern","description":"The AccessPattern utility allows you to quickly build QueryCommands on the entity Table :","source":"@site/docs/3-entities/4-actions/2-access-pattern/index.md","sourceDirName":"3-entities/4-actions/2-access-pattern","slug":"/entities/actions/access-pattern/","permalink":"/docs/entities/actions/access-pattern/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"AccessPattern","sidebar_custom_props":{"sidebarActionType":"util"}},"sidebar":"tutorialSidebar","previous":{"title":"GetItem","permalink":"/docs/entities/actions/get-item/"},"next":{"title":"PutItem","permalink":"/docs/entities/actions/put-item/"}}');var i=t(74848),r=t(28453);const c={title:"AccessPattern",sidebar_custom_props:{sidebarActionType:"util"}},a="AccessPattern",o={},d=[{value:"Methods",id:"methods",level:2},{value:"<code>.schema(...)</code>",id:"schema",level:3},{value:"<code>.pattern(...)</code>",id:"pattern",level:3},{value:"<code>.query(...)</code>",id:"query",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"accesspattern",children:"AccessPattern"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"AccessPattern"})," utility allows you to quickly build ",(0,i.jsx)(n.a,{href:"/docs/tables/actions/query/",children:(0,i.jsx)(n.code,{children:"QueryCommands"})})," on the entity ",(0,i.jsx)(n.code,{children:"Table"})," :"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { AccessPattern } from 'dynamodb-toolbox/entity/actions/accessPattern'\n\nconst highLevelPokemons = PokemonEntity.build(AccessPattern)\n  // Define the expected query input schema\n  .schema(map({ trainerId: string(), level: number() }))\n  // Declare the query pattern\n  .pattern(({ trainerId, level }) => ({\n    index: 'byLevel',\n    partition: trainerId,\n    range: { gte: level },\n    options: { maxPages: 3 } // optional\n  }))\n\nconst { Items } = await highLevelPokemons\n  .query({ trainerId, level: 70 })\n  .send()\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsx)(n.p,{children:"Remember that schemas can be composed or derived from existing ones:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const queryPokemonsByLevel = PokemonEntity\n  .build(AccessPattern)\n  .schema(pokemonSchema.pick('trainerId', 'level'))\n"})})]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["For multiple ",(0,i.jsx)(n.code,{children:"Entities"})," access patterns, see the dedicated ",(0,i.jsx)(n.a,{href:"/docs/tables/actions/access-pattern/",children:(0,i.jsx)(n.code,{children:"AccessPattern"})})," Table Action."]})}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"schema",children:(0,i.jsx)(n.code,{children:".schema(...)"})}),"\n",(0,i.jsx)("p",{style:{marginTop:"-15px"},children:(0,i.jsx)("i",{children:"(required)"})}),"\n",(0,i.jsxs)(n.p,{children:["Defines the input schema for the pattern parameters (see the ",(0,i.jsx)(n.a,{href:"/docs/schemas/usage/",children:"Schema Section"})," for more details):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { string } from 'dynamodb-toolbox/schema/string'\n\nconst stringAccessPattern =\n  PokeTable.build(AccessPattern).schema(string())\n"})}),"\n",(0,i.jsx)(n.h3,{id:"pattern",children:(0,i.jsx)(n.code,{children:".pattern(...)"})}),"\n",(0,i.jsx)("p",{style:{marginTop:"-15px"},children:(0,i.jsx)("i",{children:"(required)"})}),"\n",(0,i.jsxs)(n.p,{children:["Defines how pattern inputs (parsed by the ",(0,i.jsx)(n.a,{href:"#schema",children:(0,i.jsx)(n.code,{children:"schema"})}),") are translated into a ",(0,i.jsx)(n.a,{href:"/docs/tables/actions/query/#query",children:(0,i.jsx)(n.code,{children:"query"})}),", i.e. an object containing:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"partition"}),": The partition key to query"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)("code",{children:["index ",(0,i.jsx)("i",{children:"(optional)"})]}),": The name of a secondary index to query"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)("code",{children:["range ",(0,i.jsx)("i",{children:"(optional)"})]}),": If the table or index has a sort key, an additional ",(0,i.jsx)("a",{href:"../../entities/actions/parse-condition#range-conditions",children:"Range or Equality Condition"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)("code",{children:["options ",(0,i.jsx)("i",{children:"(optional)"})]}),": Additional ",(0,i.jsx)(n.code,{children:"QueryCommand"})," options (see ",(0,i.jsx)(n.a,{href:"/docs/tables/actions/query/#options",children:(0,i.jsx)(n.code,{children:"QueryCommands"})})," for more details)"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const stringAccessPattern = PokeTable.build(AccessPattern)\n  .schema(string())\n  .pattern(str => ({ partition: str }))\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["It is advised to provide ",(0,i.jsx)(n.code,{children:"schema"})," first as it constrains the query type."]})}),"\n",(0,i.jsx)(n.h3,{id:"query",children:(0,i.jsx)(n.code,{children:".query(...)"})}),"\n",(0,i.jsxs)(n.p,{children:["Produces a ",(0,i.jsx)(n.a,{href:"/docs/tables/actions/query/",children:(0,i.jsx)(n.code,{children:"QueryCommand"})})," from valid pattern inputs:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const queryCommand = await highLevelPokemons\n  .query({ trainerId, level: 70 })\n  .options({ consistent: true })\n\nconst { Items } = await queryCommand.send()\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);