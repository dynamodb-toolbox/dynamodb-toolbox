"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8373],{5941:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>h});var s=t(4848),i=t(8453),l=t(1470),r=t(9365);const o={title:"ParseCondition",sidebar_custom_props:{sidebarActionType:"util"}},c="ConditionParser",a={id:"entities/actions/parse-condition/index",title:"ParseCondition",description:"Builds a Condition Expression that can be used to condition write operations, or filter the results of a Query or a Scan:",source:"@site/versioned_docs/version-v1/3-entities/4-actions/18-parse-condition/index.md",sourceDirName:"3-entities/4-actions/18-parse-condition",slug:"/entities/actions/parse-condition/",permalink:"/docs/v1/entities/actions/parse-condition/",draft:!1,unlisted:!1,tags:[],version:"v1",frontMatter:{title:"ParseCondition",sidebar_custom_props:{sidebarActionType:"util"}},sidebar:"tutorialSidebar",previous:{title:"Parse",permalink:"/docs/v1/entities/actions/parse/"},next:{title:"ParsePaths",permalink:"/docs/v1/entities/actions/parse-paths/"}},d={},h=[{value:"Methods",id:"methods",level:2},{value:"<code>parse(...)</code>",id:"parse",level:3},{value:"<code>toCommandOptions()</code>",id:"tocommandoptions",level:3},{value:"<code>setId(...)</code>",id:"setid",level:3},{value:"Building Conditions",id:"building-conditions",level:2},{value:"Paths",id:"paths",level:3},{value:"Value conditions",id:"value-conditions",level:3},{value:"Range conditions",id:"range-conditions",level:3},{value:"Combining Conditions",id:"combining-conditions",level:2},{value:"Comparing Attributes",id:"comparing-attributes",level:2},{value:"Examples",id:"examples",level:2}];function x(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"conditionparser",children:"ConditionParser"})}),"\n",(0,s.jsxs)(n.p,{children:["Builds a ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ConditionExpressions.html",children:"Condition Expression"})," that can be used to condition write operations, or filter the results of a ",(0,s.jsx)(n.a,{href:"/docs/v1/tables/actions/query/",children:"Query"})," or a ",(0,s.jsx)(n.a,{href:"/docs/v1/tables/actions/scan/",children:"Scan"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { ConditionParser } from 'dynamodb-toolbox/entity/actions/parseCondition'\n\n// \ud83d\udc47 To be used in DynamoDB commands\nconst {\n  ConditionExpression,\n  ExpressionAttributeNames,\n  ExpressionAttributeValues\n} = PokemonEntity.build(ConditionParser)\n  .parse({\n    // Pokemons with levels \u2265 50\n    attr: 'level',\n    gte: 50\n  })\n  .toCommandOptions()\n"})}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"parse",children:(0,s.jsx)(n.code,{children:"parse(...)"})}),"\n",(0,s.jsx)("p",{style:{marginTop:"-15px"},children:(0,s.jsx)("i",{children:(0,s.jsx)("code",{children:"(condition: Condition<ENTITY>) => ConditionParser"})})}),"\n",(0,s.jsxs)(n.p,{children:["Parses a condition. Throws an ",(0,s.jsx)(n.code,{children:"invalidCondition"})," error if the condition is invalid:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"PokemonEntity.build(ConditionParser).parse({\n  attr: 'level',\n  gte: 50\n})\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note that the ",(0,s.jsx)(n.code,{children:"parse"})," method should only be used once per instance (for now). See ",(0,s.jsx)(n.a,{href:"#building-conditions",children:"Building Conditions"})," for more details on how to write conditions."]}),"\n",(0,s.jsx)(n.h3,{id:"tocommandoptions",children:(0,s.jsx)(n.code,{children:"toCommandOptions()"})}),"\n",(0,s.jsx)("p",{style:{marginTop:"-15px"},children:(0,s.jsx)("i",{children:(0,s.jsx)("code",{children:"() => CommandOptions"})})}),"\n",(0,s.jsxs)(n.p,{children:["Collapses the ",(0,s.jsx)(n.code,{children:"ConditionParser"})," state to a set of options that can be used in a DynamoDB command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const {\n  ConditionExpression,\n  ExpressionAttributeNames,\n  ExpressionAttributeValues\n} = PokemonEntity.build(ConditionParser)\n  .parse({ attr: 'level', gte: 50 })\n  .toCommandOptions()\n"})}),"\n",(0,s.jsx)(n.h3,{id:"setid",children:(0,s.jsx)(n.code,{children:"setId(...)"})}),"\n",(0,s.jsx)("p",{style:{marginTop:"-15px"},children:(0,s.jsx)("i",{children:(0,s.jsx)("code",{children:"(id: string) => ConditionParser"})})}),"\n",(0,s.jsx)(n.p,{children:"Adds a prefix to expression attribute keys. Useful to avoid conflicts when using several expressions in a single command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"PokemonEntity.build(ConditionParser)\n  .parse({ attr: 'level', gte: 50 })\n  .toCommandOptions()\n// => {\n//   ConditionExpression: '#c_1 >= :c_1',\n//   ExpressionAttributeNames: { '#c_1': 'sk' },\n//   ExpressionAttributeValues: { ':c_1': 50 }\n// }\n\nPokemonEntity.build(ConditionParser)\n  .setId('0')\n  .parse({ attr: 'level', gte: 50 })\n  .toCommandOptions()\n// => {\n//   ConditionExpression: '#c0_1 >= :c0_1',\n//   ExpressionAttributeNames: { '#c0_1': 'sk' },\n//   ExpressionAttributeValues: { ':c0_1': 50 }\n// }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"building-conditions",children:"Building Conditions"}),"\n",(0,s.jsxs)(n.p,{children:["The condition syntax from DynamoDB-Toolbox follows the ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.OperatorsAndFunctions.html",children:"DynamoDB specifications"}),", while making it ",(0,s.jsx)(n.strong,{children:"type-safe"})," and much ",(0,s.jsx)(n.strong,{children:"simpler"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import type { Condition } from 'dynamodb-toolbox/entity/actions/parseCondition'\n\nconst condition: Condition<typeof PokemonEntity> = {\n  attr: 'level',\n  gte: 50\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Each condition contains ",(0,s.jsx)(n.strong,{children:"an attribute path"})," and an ",(0,s.jsx)(n.strong,{children:"operator"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["You can only specify one operator per condition. To combine multiple conditions, use ",(0,s.jsx)(n.a,{href:"#combining-conditions",children:"Logical Combinations"}),"."]})}),"\n",(0,s.jsx)(n.h3,{id:"paths",children:"Paths"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"attr"})," contains the path of the attribute value to check (potentially deep). You can also specify ",(0,s.jsx)(n.code,{children:"size"})," instead of ",(0,s.jsx)(n.code,{children:"attr"})," if you want to check the ",(0,s.jsx)(n.strong,{children:"size"})," of an attribute (in which case the attribute type becomes ",(0,s.jsx)(n.code,{children:"number"}),"):"]}),"\n",(0,s.jsx)(n.admonition,{title:"Examples",type:"note",children:(0,s.jsxs)(l.A,{children:[(0,s.jsx)(r.A,{value:"root",label:"Root",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  attr: 'name',\n  eq: 'Pikachu'\n}\n"})})}),(0,s.jsx)(r.A,{value:"deep-map",label:"Deep (Map)",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  attr: 'name.firstName',\n  eq: 'Pikachu'\n}\n"})})}),(0,s.jsx)(r.A,{value:"deep-list",label:"Deep (List)",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  attr: 'names[0]',\n  eq: 'Pikachu'\n}\n"})})}),(0,s.jsx)(r.A,{value:"special-char",label:"Special characters",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  attr: \"name['.first#Name!']\",\n  eq: 'Pikachu'\n}\n"})})}),(0,s.jsx)(r.A,{value:"size",label:"Size",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const imgLte64KB: Condition<typeof PokemonEntity> = {\n  size: 'image',\n  lte: 64_000\n}\n"})})})]})}),"\n",(0,s.jsx)(n.h3,{id:"value-conditions",children:"Value conditions"}),"\n",(0,s.jsxs)(n.p,{children:["Value conditions evaluate against the ",(0,s.jsx)(n.strong,{children:"value"})," of an attribute:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Key"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Value"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Attribute Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"eq"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"scalar"})}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,s.jsx)(n.code,{children:"scalar"}),"*"]}),(0,s.jsxs)(n.td,{children:["Checks that the attribute is ",(0,s.jsx)(n.strong,{children:"equal"})," to the specified value"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"ne"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"scalar"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"scalar"})}),(0,s.jsxs)(n.td,{children:["Checks that the attribute is ",(0,s.jsx)(n.strong,{children:"different"})," than the specified value"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"in"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"scalar[]"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"scalar"})}),(0,s.jsxs)(n.td,{children:["Checks that the attribute is in a ",(0,s.jsx)(n.strong,{children:"finite range of values"})," (100 values max)"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"contains"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"scalar"})}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,s.jsx)(n.code,{children:"string"}),", ",(0,s.jsx)(n.code,{children:"sets"})," or ",(0,s.jsx)(n.code,{children:"lists"})]}),(0,s.jsxs)(n.td,{children:["Checks that the attribute is one of the following:",(0,s.jsxs)("ul",{children:[(0,s.jsxs)("li",{children:["A ",(0,s.jsx)("code",{children:"string"})," that contains a ",(0,s.jsx)(n.strong,{children:"particular substring"})]}),(0,s.jsxs)("li",{children:["A ",(0,s.jsx)("code",{children:"set"})," that contains a ",(0,s.jsx)(n.strong,{children:"particular element"})]}),(0,s.jsxs)("li",{children:["A ",(0,s.jsx)("code",{children:"list"})," that contains a ",(0,s.jsx)(n.strong,{children:"particular element"})]})]})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"exists"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsxs)(n.td,{children:["Checks that the attribute is ",(0,s.jsx)(n.strong,{children:"present in the item"})," (or not)"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"type"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsxs)(n.td,{children:["Checks that the attribute is of a ",(0,s.jsx)(n.strong,{children:"particular data type"}),":",(0,s.jsxs)("ul",{children:[(0,s.jsxs)("li",{children:[(0,s.jsx)(n.code,{children:'"NULL"'})," = ",(0,s.jsx)(n.code,{children:"null"})]}),(0,s.jsxs)("li",{children:[(0,s.jsx)(n.code,{children:'"BOOL"'})," = ",(0,s.jsx)(n.code,{children:"boolean"})]}),(0,s.jsxs)("li",{children:[(0,s.jsx)(n.code,{children:'"N"'})," = ",(0,s.jsx)(n.code,{children:"number"})]}),(0,s.jsxs)("li",{children:[(0,s.jsx)(n.code,{children:'"S"'})," = ",(0,s.jsx)(n.code,{children:"string"})]}),(0,s.jsxs)("li",{children:[(0,s.jsx)(n.code,{children:'"B"'})," = ",(0,s.jsx)(n.code,{children:"binary"})]}),(0,s.jsxs)("li",{children:[(0,s.jsx)("code",{children:'"NS|SS|BS"'})," = ",(0,s.jsx)(n.code,{children:"set"})," of ",(0,s.jsx)(n.code,{children:"number"}),", ",(0,s.jsx)(n.code,{children:"string"})," or ",(0,s.jsx)(n.code,{children:"binary"})]}),(0,s.jsxs)("li",{children:[(0,s.jsx)(n.code,{children:'"L"'})," = ",(0,s.jsx)(n.code,{children:"list"})]}),(0,s.jsxs)("li",{children:[(0,s.jsx)(n.code,{children:'"M"'})," = ",(0,s.jsx)(n.code,{children:"map"})]})]})]})]})]})]}),"\n",(0,s.jsx)("sup",{children:(0,s.jsxs)("i",{children:["*",(0,s.jsx)("a",{href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes",children:"Scalar"})," = ",(0,s.jsx)("code",{children:"boolean"}),", ",(0,s.jsx)("code",{children:"number"}),", ",(0,s.jsx)("code",{children:"string"})," or ",(0,s.jsx)("code",{children:"binary"})]})}),"\n",(0,s.jsx)(n.admonition,{title:"Examples",type:"note",children:(0,s.jsxs)(l.A,{children:[(0,s.jsx)(r.A,{value:"eq",label:"Equal",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  attr: 'name',\n  eq: 'Pikachu'\n}\n"})})}),(0,s.jsx)(r.A,{value:"neq",label:"Not equal",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  attr: 'name',\n  ne: 'Pikachu'\n}\n"})})}),(0,s.jsx)(r.A,{value:"in",label:"In",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  attr: 'name',\n  in: ['Pikachu', 'Charizard', 'MewTwo']\n}\n"})})}),(0,s.jsx)(r.A,{value:"contains-set-list",label:"Contains",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const pokeTypeCheck: Condition<typeof PokemonEntity> = {\n  // \ud83d\udc47 `pokeTypes` = list/set of strings\n  attr: 'pokeTypes',\n  contains: 'fire'\n}\n"})})}),(0,s.jsx)(r.A,{value:"contains-string",label:"Contains (string)",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  // \ud83d\udc47 string\n  attr: 'name',\n  contains: 'Pika'\n}\n"})})}),(0,s.jsx)(r.A,{value:"exists",label:"Exists",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const customNameCheck: Condition<typeof PokemonEntity> = {\n  attr: 'customName',\n  exists: true\n}\n"})})}),(0,s.jsx)(r.A,{value:"type",label:"Type",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const pokeTypeCheck: Condition<typeof PokemonEntity> = {\n  // \ud83d\udc47 Checks that `pokeTypes` is a list\n  attr: 'pokeTypes',\n  type: 'L'\n}\n"})})})]})}),"\n",(0,s.jsx)(n.h3,{id:"range-conditions",children:"Range conditions"}),"\n",(0,s.jsxs)(n.p,{children:["Range conditions evaluate whether an attribute of sortable type (i.e. ",(0,s.jsx)(n.a,{href:"/docs/v1/schemas/number/",children:"number"}),", ",(0,s.jsx)(n.a,{href:"/docs/v1/schemas/string/",children:"string"})," or ",(0,s.jsx)(n.a,{href:"/docs/v1/schemas/binary/",children:"binary"}),") is ",(0,s.jsx)(n.strong,{children:"within a certain range"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Apart from the ",(0,s.jsxs)(n.a,{href:"#value-conditions",children:[(0,s.jsx)(n.code,{children:"eq"})," value condition"]}),", only range conditions are accepted in ",(0,s.jsxs)(n.a,{href:"/docs/v1/tables/actions/query/#query",children:[(0,s.jsx)(n.code,{children:"Query"})," ranges"]}),"."]})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Key"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Value"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Attribute Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"gte"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"sortable"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"sortable"})}),(0,s.jsxs)(n.td,{children:["Checks that the attribute is ",(0,s.jsx)(n.strong,{children:"greater than or equal to"})," the specified value"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"gt"})}),(0,s.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,s.jsx)(n.code,{children:"sortable"}),"*"]}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"sortable"})}),(0,s.jsxs)(n.td,{children:["Checks that the attribute is ",(0,s.jsx)(n.strong,{children:"strictly greater"})," than the specified value"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"lte"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"sortable"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"sortable"})}),(0,s.jsxs)(n.td,{children:["Checks that the attribute is ",(0,s.jsx)(n.strong,{children:"lower than or equal to"})," the specified value"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"lt"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"sortable"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"sortable"})}),(0,s.jsxs)(n.td,{children:["Checks that the attribute is ",(0,s.jsx)(n.strong,{children:"strictly lower than"})," the specified value"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"between"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"[sortable, sortable]"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"sortable"})}),(0,s.jsxs)(n.td,{children:["Checks that the attribute is ",(0,s.jsx)(n.strong,{children:"between"})," two values (inclusive)"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"beginsWith"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:["Checks that the ",(0,s.jsx)(n.code,{children:"string"})," attribute specified ",(0,s.jsx)(n.strong,{children:"begins with a particular substring"})]})]})]})]}),"\n",(0,s.jsx)("sup",{children:(0,s.jsxs)("i",{children:["* Sortable = ",(0,s.jsx)("code",{children:"number"}),", ",(0,s.jsx)("code",{children:"string"})," or ",(0,s.jsx)("code",{children:"binary"})]})}),"\n",(0,s.jsx)(n.admonition,{title:"Examples",type:"note",children:(0,s.jsxs)(l.A,{children:[(0,s.jsx)(r.A,{value:"greater-than",label:"\u2265",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const levelGte50: Condition<typeof PokemonEntity> = {\n  attr: 'level',\n  gte: 50\n}\n"})})}),(0,s.jsx)(r.A,{value:"greater-than-strict",label:">",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const levelAbove50: Condition<typeof PokemonEntity> = {\n  attr: 'level',\n  gt: 50\n}\n"})})}),(0,s.jsx)(r.A,{value:"lower-than",label:"\u2264",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const levelLte50: Condition<typeof PokemonEntity> = {\n  attr: 'level',\n  lte: 50\n}\n"})})}),(0,s.jsx)(r.A,{value:"lower-than-strict",label:"<",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const levelBelow50: Condition<typeof PokemonEntity> = {\n  attr: 'level',\n  lt: 50\n}\n"})})}),(0,s.jsx)(r.A,{value:"between",label:"Between",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const levelFrom50To70: Condition<typeof PokemonEntity> = {\n  attr: 'level',\n  between: [50, 70]\n}\n"})})}),(0,s.jsx)(r.A,{value:"begins-with",label:"Begins with",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const capturedIn2024: Condition<typeof PokemonEntity> = {\n  attr: 'captureDate',\n  beginsWith: '2024'\n}\n"})})})]})}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["Again, only one operator can be applied per condition: Using ",(0,s.jsx)(n.code,{children:"gte"})," and ",(0,s.jsx)(n.code,{children:"lte"})," simultaneously does ",(0,s.jsx)(n.strong,{children:"not"})," result in a ",(0,s.jsx)(n.code,{children:"between"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"combining-conditions",children:"Combining Conditions"}),"\n",(0,s.jsxs)(n.p,{children:["You can ",(0,s.jsx)(n.strong,{children:"combine conditions logically"})," with the ",(0,s.jsx)(n.code,{children:"or"}),", ",(0,s.jsx)(n.code,{children:"and"})," and ",(0,s.jsx)(n.code,{children:"not"})," operators:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Value"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Attribute Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"or"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"Condition<ENTITY>[]"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsxs)(n.td,{children:["Checks that ",(0,s.jsx)(n.strong,{children:"one of"})," the child conditions evaluate to ",(0,s.jsx)(n.code,{children:"true"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"and"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"Condition<ENTITY>[]"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsxs)(n.td,{children:["Checks that ",(0,s.jsx)(n.strong,{children:"all of"})," the child conditions evaluate to ",(0,s.jsx)(n.code,{children:"true"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"not"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:(0,s.jsx)(n.code,{children:"Condition<ENTITY>"})}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.strong,{children:"Negates"})," the evaluation of the condition"]})]})]})]}),"\n",(0,s.jsx)(n.admonition,{title:"Examples",type:"note",children:(0,s.jsxs)(l.A,{children:[(0,s.jsx)(r.A,{value:"or",label:"Or",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const lvlGte50OrElec: Condition<typeof PokemonEntity> = {\n  or: [\n    { attr: 'level', gte: 50 },\n    { attr: 'pokeType', eq: 'electric' }\n  ]\n}\n"})})}),(0,s.jsx)(r.A,{value:"and",label:"And",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const lvlGte50AndElec: Condition<typeof PokemonEntity> = {\n  and: [\n    { attr: 'level', gte: 50 },\n    { attr: 'pokeType', eq: 'electric' }\n  ]\n}\n"})})}),(0,s.jsx)(r.A,{value:"not",label:"Not",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const notElectric: Condition<typeof PokemonEntity> = {\n  not: {\n    attr: 'pokeType',\n    eq: 'electric'\n  }\n}\n"})})}),(0,s.jsx)(r.A,{value:"deep",label:"Deep",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const deepCondition: Condition<typeof PokemonEntity> = {\n  and: [\n    {\n      // Level \u2265 50 or \u2264 20...\n      or: [\n        { attr: 'level', gte: 50 },\n        { not: { attr: 'level', gt: 20 } }\n      ]\n    },\n    // ...and pokeType not 'electric'\n    { not: { attr: 'pokeType', eq: 'electric' } }\n  ]\n}\n"})})})]})}),"\n",(0,s.jsx)(n.h2,{id:"comparing-attributes",children:"Comparing Attributes"}),"\n",(0,s.jsxs)(n.p,{children:["Instead of directly providing values, you can ",(0,s.jsx)(n.strong,{children:"compare attributes to other attributes"})," by providing objects with an ",(0,s.jsx)(n.code,{children:"attr"})," key to the operators:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const atMaxLevel: Condition<typeof PokemonEntity> = {\n  attr: 'level',\n  eq: { attr: 'maxLevel' }\n}\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"warning",children:[(0,s.jsxs)(n.p,{children:["Note that the compared attribute path is type-checked and validated, but whether its type CAN be compared is ",(0,s.jsx)(n.strong,{children:"not"})," for the moment, so be extra-careful:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const invalidCondition: Condition<typeof PokemonEntity> = {\n  attr: 'level',\n  // \u274c Reaches DynamoDB and fail\n  gte: { attr: 'name' }\n}\n"})})]}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.admonition,{title:"Paths",type:"note",children:(0,s.jsxs)(l.A,{children:[(0,s.jsx)(r.A,{value:"root",label:"Root",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  attr: 'name',\n  eq: 'Pikachu'\n}\n"})})}),(0,s.jsx)(r.A,{value:"deep-map",label:"Deep (Map)",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  attr: 'name.firstName',\n  eq: 'Pikachu'\n}\n"})})}),(0,s.jsx)(r.A,{value:"deep-list",label:"Deep (List)",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  attr: 'names[0]',\n  eq: 'Pikachu'\n}\n"})})}),(0,s.jsx)(r.A,{value:"special-char",label:"Special characters",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  attr: \"name['.first#Name!']\",\n  eq: 'Pikachu'\n}\n"})})}),(0,s.jsx)(r.A,{value:"size",label:"Size",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const imgLte64KB: Condition<typeof PokemonEntity> = {\n  size: 'image',\n  lte: 64_000\n}\n"})})})]})}),"\n",(0,s.jsx)(n.admonition,{title:"Value Conditions",type:"note",children:(0,s.jsxs)(l.A,{children:[(0,s.jsx)(r.A,{value:"eq",label:"Equal",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  attr: 'name',\n  eq: 'Pikachu'\n}\n"})})}),(0,s.jsx)(r.A,{value:"neq",label:"Not equal",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  attr: 'name',\n  ne: 'Pikachu'\n}\n"})})}),(0,s.jsx)(r.A,{value:"in",label:"In",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  attr: 'name',\n  in: ['Pikachu', 'Charizard', 'MewTwo']\n}\n"})})}),(0,s.jsx)(r.A,{value:"contains-set-list",label:"Contains",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const pokeTypeCheck: Condition<typeof PokemonEntity> = {\n  // \ud83d\udc47 `pokeTypes` = list/set of strings\n  attr: 'pokeTypes',\n  contains: 'fire'\n}\n"})})}),(0,s.jsx)(r.A,{value:"contains-string",label:"Contains (string)",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameCheck: Condition<typeof PokemonEntity> = {\n  // \ud83d\udc47 string\n  attr: 'name',\n  contains: 'Pika'\n}\n"})})}),(0,s.jsx)(r.A,{value:"exists",label:"Exists",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const customNameCheck: Condition<typeof PokemonEntity> = {\n  attr: 'customName',\n  exists: true\n}\n"})})}),(0,s.jsx)(r.A,{value:"type",label:"Type",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const pokeTypeCheck: Condition<typeof PokemonEntity> = {\n  // \ud83d\udc47 Checks that `pokeTypes` is a list\n  attr: 'pokeTypes',\n  type: 'L'\n}\n"})})})]})}),"\n",(0,s.jsx)(n.admonition,{title:"Range Conditions",type:"note",children:(0,s.jsxs)(l.A,{children:[(0,s.jsx)(r.A,{value:"greater-than",label:"\u2265",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const levelGte50: Condition<typeof PokemonEntity> = {\n  attr: 'level',\n  gte: 50\n}\n"})})}),(0,s.jsx)(r.A,{value:"greater-than-strict",label:">",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const levelAbove50: Condition<typeof PokemonEntity> = {\n  attr: 'level',\n  gt: 50\n}\n"})})}),(0,s.jsx)(r.A,{value:"lower-than",label:"\u2264",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const levelLte50: Condition<typeof PokemonEntity> = {\n  attr: 'level',\n  lte: 50\n}\n"})})}),(0,s.jsx)(r.A,{value:"lower-than-strict",label:"<",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const levelBelow50: Condition<typeof PokemonEntity> = {\n  attr: 'level',\n  lt: 50\n}\n"})})}),(0,s.jsx)(r.A,{value:"between",label:"Between",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const levelFrom50To70: Condition<typeof PokemonEntity> = {\n  attr: 'level',\n  between: [50, 70]\n}\n"})})}),(0,s.jsx)(r.A,{value:"begins-with",label:"Begins with",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const capturedIn2024: Condition<typeof PokemonEntity> = {\n  attr: 'captureDate',\n  beginsWith: '2024'\n}\n"})})})]})}),"\n",(0,s.jsx)(n.admonition,{title:"Logical Combinations",type:"note",children:(0,s.jsxs)(l.A,{children:[(0,s.jsx)(r.A,{value:"or",label:"Or",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const lvlGte50OrElec: Condition<typeof PokemonEntity> = {\n  or: [\n    { attr: 'level', gte: 50 },\n    { attr: 'pokeType', eq: 'electric' }\n  ]\n}\n"})})}),(0,s.jsx)(r.A,{value:"and",label:"And",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const lvlGte50AndElec: Condition<typeof PokemonEntity> = {\n  and: [\n    { attr: 'level', gte: 50 },\n    { attr: 'pokeType', eq: 'electric' }\n  ]\n}\n"})})}),(0,s.jsx)(r.A,{value:"not",label:"Not",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const notElectric: Condition<typeof PokemonEntity> = {\n  not: {\n    attr: 'pokeType',\n    eq: 'electric'\n  }\n}\n"})})}),(0,s.jsx)(r.A,{value:"deep",label:"Deep",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const deepCondition: Condition<typeof PokemonEntity> = {\n  and: [\n    {\n      // Level \u2265 50 or \u2264 20...\n      or: [\n        { attr: 'level', gte: 50 },\n        { not: { attr: 'level', gt: 20 } }\n      ]\n    },\n    // ...and pokeType not 'electric'\n    { not: { attr: 'pokeType', eq: 'electric' } }\n  ]\n}\n"})})})]})}),"\n",(0,s.jsx)(n.admonition,{title:"Comparing Attributes",type:"note",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const atMaxLevel: Condition<typeof PokemonEntity> = {\n  attr: 'level',\n  eq: { attr: 'maxLevel' }\n}\n"})})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>r});t(6540);var s=t(8215);const i={tabItem:"tabItem_Ymn6"};var l=t(4848);function r(e){let{children:n,hidden:t,className:r}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,s.A)(i.tabItem,r),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>k});var s=t(6540),i=t(8215),l=t(3104),r=t(6347),o=t(205),c=t(7485),a=t(1682),d=t(679);function h(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function x(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:i}}=e;return{value:n,label:t,attributes:s,default:i}}))}(t);return function(e){const n=(0,a.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function u(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function j(e){let{queryString:n=!1,groupId:t}=e;const i=(0,r.W6)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(l),(0,s.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(i.location.search);n.set(l,e),i.replace({...i.location,search:n.toString()})}),[l,i])]}function p(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,l=x(e),[r,c]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:l}))),[a,h]=j({queryString:t,groupId:i}),[p,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,l]=(0,d.Dv)(t);return[i,(0,s.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:i}),g=(()=>{const e=a??p;return u({value:e,tabValues:l})?e:null})();(0,o.A)((()=>{g&&c(g)}),[g]);return{selectedValue:r,selectValue:(0,s.useCallback)((e=>{if(!u({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);c(e),h(e),m(e)}),[h,m,l]),tabValues:l}}var m=t(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=t(4848);function b(e){let{className:n,block:t,selectedValue:s,selectValue:r,tabValues:o}=e;const c=[],{blockElementScrollPositionUntilNextRender:a}=(0,l.a_)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),i=o[t].value;i!==s&&(a(n),r(i))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:l}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>c.push(e),onKeyDown:h,onClick:d,...l,className:(0,i.A)("tabs__item",g.tabItem,l?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:l}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===l));return e?(0,s.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==l})))})}function f(e){const n=p(e);return(0,y.jsxs)("div",{className:(0,i.A)("tabs-container",g.tabList),children:[(0,y.jsx)(b,{...n,...e}),(0,y.jsx)(v,{...n,...e})]})}function k(e){const n=(0,m.A)();return(0,y.jsx)(f,{...e,children:h(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(6540);const i={},l=s.createContext(i);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);