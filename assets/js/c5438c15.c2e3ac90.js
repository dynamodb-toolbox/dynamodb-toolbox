"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6461],{11470:(e,t,n)=>{n.d(t,{A:()=>P});var i=n(96540),r=n(18215),s=n(23104),a=n(56347),o=n(205),l=n(57485),d=n(31682),c=n(70679);function h(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:n,attributes:i,default:r}}=e;return{value:t,label:n,attributes:i,default:r}}))}(n);return function(e){const t=(0,d.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function x(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const r=(0,a.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(s),(0,i.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function p(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=u(e),[a,l]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!x({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const i=n.find((e=>e.default))??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:t,tabValues:s}))),[d,h]=m({queryString:n,groupId:r}),[p,j]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,c.Dv)(n);return[r,(0,i.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),b=(()=>{const e=d??p;return x({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{b&&l(b)}),[b]);return{selectedValue:a,selectValue:(0,i.useCallback)((e=>{if(!x({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),j(e)}),[h,j,s]),tabValues:s}}var j=n(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=n(74848);function f(e){let{className:t,block:n,selectedValue:i,selectValue:a,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),c=e=>{const t=e.currentTarget,n=l.indexOf(t),r=o[n].value;r!==i&&(d(t),a(r))},h=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:o.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,ref:e=>l.push(e),onKeyDown:h,onClick:c,...s,className:(0,r.A)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":i===t}),children:n??t},t)}))})}function g(e){let{lazy:t,children:n,selectedValue:s}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===s));return e?(0,i.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function v(e){const t=p(e);return(0,y.jsxs)("div",{className:(0,r.A)("tabs-container",b.tabList),children:[(0,y.jsx)(f,{...t,...e}),(0,y.jsx)(g,{...t,...e})]})}function P(e){const t=(0,j.A)();return(0,y.jsx)(v,{...e,children:h(e.children)},String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>a});n(96540);var i=n(18215);const r={tabItem:"tabItem_Ymn6"};var s=n(74848);function a(e){let{children:t,hidden:n,className:a}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,a),hidden:n,children:t})}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(96540);const r={},s=i.createContext(r);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}},36440:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>x,frontMatter:()=>l,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"tables/actions/deletePartition/index","title":"DeletePartition","description":"DeletePartitionCommand is exposed as a quality of life improvement, but is NOT an official DynamoDB operation (eventhough we wish it was).","source":"@site/docs/2-tables/2-actions/3-deletePartition/index.md","sourceDirName":"2-tables/2-actions/3-deletePartition","slug":"/tables/actions/deletePartition/","permalink":"/docs/tables/actions/deletePartition/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"DeletePartition","sidebar_custom_props":{"sidebarActionType":"delete"}},"sidebar":"tutorialSidebar","previous":{"title":"Query","permalink":"/docs/tables/actions/query/"},"next":{"title":"Batching","permalink":"/docs/tables/actions/batching/"}}');var r=n(74848),s=n(28453),a=n(11470),o=n(19365);const l={title:"DeletePartition",sidebar_custom_props:{sidebarActionType:"delete"}},d="DeletePartition",c={},h=[{value:"Request",id:"request",level:2},{value:"<code>.query(...)</code>",id:"query",level:3},{value:"<code>.entities(...)</code>",id:"entities",level:3},{value:"<code>.options(...)</code>",id:"options",level:3},{value:"Examples",id:"examples",level:2},{value:"Response",id:"response",level:2}];function u(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"deletepartition",children:"DeletePartition"})}),"\n",(0,r.jsxs)(t.admonition,{type:"warning",children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"DeletePartitionCommand"})," is exposed as a quality of life improvement, but is NOT an official DynamoDB operation (eventhough we wish it was)."]}),(0,r.jsxs)(t.p,{children:["Use it with \u26a0\ufe0f ",(0,r.jsx)(t.strong,{children:"caution"})," \u26a0\ufe0f It can be ",(0,r.jsx)(t.strong,{children:"long"})," and ",(0,r.jsx)(t.strong,{children:"costly"})," on large partitions, and ",(0,r.jsx)(t.strong,{children:"incomplete"})," in case of inconsistent read."]})]}),"\n",(0,r.jsxs)(t.p,{children:["Performs one or more ",(0,r.jsx)(t.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Query.html",children:"Query operations"})," on a ",(0,r.jsx)(t.code,{children:"Table"}),", and then runs ",(0,r.jsx)(t.a,{href:"/docs/tables/actions/batch-write/",children:(0,r.jsx)(t.code,{children:"BatchWriteCommands"})})," to batch delete the returned items. Automatically iterates through query pages if needed:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import { DeletePartitionCommand } from 'dynamodb-toolbox/table/actions/deletePartition'\n\nconst deletePartitionCommand = PokeTable.build(\n  DeletePartitionCommand\n)\n\nawait deletePartitionCommand.send()\n"})}),"\n",(0,r.jsx)(t.h2,{id:"request",children:"Request"}),"\n",(0,r.jsx)(t.h3,{id:"query",children:(0,r.jsx)(t.code,{children:".query(...)"})}),"\n",(0,r.jsx)("p",{style:{marginTop:"-15px"},children:(0,r.jsx)("i",{children:"(required)"})}),"\n",(0,r.jsx)(t.p,{children:"The partition to query, with optional index and range condition:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"partition"}),": The partition key to query"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsxs)("code",{children:["index ",(0,r.jsx)("i",{children:"(optional)"})]}),": The name of a secondary index to query"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsxs)("code",{children:["range ",(0,r.jsx)("i",{children:"(optional)"})]}),": If the table or index has a sort key, an additional ",(0,r.jsx)("a",{href:"../../entities/actions/parse-condition#range-conditions",children:"Range or Equality Condition"})]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"// Delete 'ashKetchum' pokemons\nawait PokeTable.build(DeletePartitionCommand)\n  .entities(PokemonEntity)\n  .query({ partition: 'ashKetchum' })\n  .send()\n"})}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["See the ",(0,r.jsx)(t.a,{href:"/docs/tables/actions/query/#query",children:(0,r.jsx)(t.code,{children:"QueryCommand"})})," documentation for more details."]})}),"\n",(0,r.jsx)(t.h3,{id:"entities",children:(0,r.jsx)(t.code,{children:".entities(...)"})}),"\n",(0,r.jsx)("p",{style:{marginTop:"-15px"},children:(0,r.jsx)("i",{children:"(required)"})}),"\n",(0,r.jsxs)(t.p,{children:["Provides a list of entities to filter the deleted items (via the internal ",(0,r.jsx)(t.a,{href:"/docs/entities/internal-attributes/#entity",children:(0,r.jsx)(t.code,{children:"entity"})})," attribute). Required to build underlying ",(0,r.jsx)(t.a,{href:"/docs/entities/actions/batch-delete/",children:(0,r.jsx)(t.code,{children:"BatchDeleteRequests"})}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"await PokeTable.build(DeletePartitionCommand)\n  // Deletes only `Pokemons` and `Trainers`\n  .entities(PokemonEntity, TrainerEntity)\n  .query(query)\n  .send()\n"})}),"\n",(0,r.jsx)(t.h3,{id:"options",children:(0,r.jsx)(t.code,{children:".options(...)"})}),"\n",(0,r.jsx)(t.p,{children:"Provides additional options:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"await PokeTable.build(DeletePartitionCommand)\n  .options({\n    consistent: true,\n    ...\n  })\n  .send()\n"})}),"\n",(0,r.jsxs)(t.p,{children:["You can use the ",(0,r.jsx)(t.code,{children:"DeletePartitionOptions"})," type to explicitly type an object as a ",(0,r.jsx)(t.code,{children:"DeletePartitionCommand"})," options object:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import type { DeletePartitionOptions } from 'dynamodb-toolbox/table/actions/deletePartition'\n\nconst queryOptions: DeletePartitionOptions<\n  typeof PokeTable,\n  [typeof PokemonEntity, typeof TrainerEntity]\n  // \ud83d\udc47 Optional query\n  { partition: string }\n> = {\n  consistent: true,\n  ...\n}\n\nawait PokeTable.build(DeletePartitionCommand)\n  .entities(PokemonEntity, TrainerEntity)\n  .query(query)\n  .options(queryOptions)\n  .send()\n"})}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:["It is advised to provide ",(0,r.jsx)(t.code,{children:"entities"})," and ",(0,r.jsx)(t.code,{children:"query"})," first as they constrain the ",(0,r.jsx)(t.code,{children:"options"})," type."]})}),"\n",(0,r.jsxs)(t.p,{children:["Available options (see the ",(0,r.jsx)(t.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Query.html#API_Query_RequestParameters",children:"DynamoDB Query documentation"})," for more details):"]}),"\n",(0,r.jsxs)("table",{children:[(0,r.jsx)("thead",{children:(0,r.jsxs)("tr",{children:[(0,r.jsx)("th",{children:"Option"}),(0,r.jsx)("th",{children:"Type"}),(0,r.jsx)("th",{children:"Default"}),(0,r.jsx)("th",{children:"Description"})]})}),(0,r.jsxs)("tbody",{children:[(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"consistent"})}),(0,r.jsx)("td",{align:"center",children:(0,r.jsx)("code",{children:"boolean"})}),(0,r.jsx)("td",{align:"center",children:(0,r.jsx)("code",{children:"false"})}),(0,r.jsx)("td",{children:(0,r.jsxs)(t.p,{children:["By default, read operations are ",(0,r.jsx)("b",{children:"eventually"})," consistent (which improves performances and reduces costs).\n",(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),"Set to ",(0,r.jsx)("code",{children:"true"})," to use a ",(0,r.jsx)("b",{children:"strongly"})," consistent query (unavailable on global secondary indexes)."]})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"capacity"})}),(0,r.jsx)("td",{align:"center",children:(0,r.jsx)("code",{children:"CapacityOption"})}),(0,r.jsx)("td",{align:"center",children:(0,r.jsx)("code",{children:'"NONE"'})}),(0,r.jsx)("td",{children:(0,r.jsxs)(t.p,{children:["Determines the level of detail about provisioned or on-demand throughput consumption that is returned in the response.\n",(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),"Possible values are ",(0,r.jsx)("code",{children:'"NONE"'}),", ",(0,r.jsx)("code",{children:'"TOTAL"'})," and ",(0,r.jsx)("code",{children:'"INDEXES"'}),".\n",(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),"(Applies for the query and the batch writes.)"]})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"tableName"})}),(0,r.jsx)("td",{align:"center",children:(0,r.jsx)("code",{children:"string"})}),(0,r.jsx)("td",{align:"center",children:"-"}),(0,r.jsx)("td",{children:(0,r.jsxs)(t.p,{children:["Overrides the ",(0,r.jsx)("code",{children:"Table"})," name. Mostly useful for ",(0,r.jsx)("a",{href:"https://en.wikipedia.org/wiki/Multitenancy",children:"multitenancy"}),"."]})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"exclusiveStartKey"})}),(0,r.jsx)("td",{align:"center",children:(0,r.jsx)("code",{children:"Key"})}),(0,r.jsx)("td",{align:"center",children:"-"}),(0,r.jsx)("td",{children:"The primary key of the first item that this operation evaluates."})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"filters"})}),(0,r.jsx)("td",{align:"center",children:(0,r.jsx)("code",{children:"Record<string, Condition>"})}),(0,r.jsx)("td",{align:"center",children:"-"}),(0,r.jsx)("td",{children:(0,r.jsxs)(t.p,{children:["For each entity name, a condition that must be satisfied in order for evaluated items of this entity to be deleted (improves performances but does not reduce costs).\n",(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),"See the ",(0,r.jsx)("a",{href:"../../entities/actions/parse-condition#building-conditions",children:(0,r.jsx)("code",{children:"ConditionParser"})})," action for more details on how to write conditions."]})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsx)("code",{children:"entityAttrFilter"})}),(0,r.jsx)("td",{align:"center",children:(0,r.jsx)("code",{children:"boolean"})}),(0,r.jsx)("td",{align:"center",children:(0,r.jsx)("code",{children:"true"})}),(0,r.jsx)("td",{children:(0,r.jsxs)(t.p,{children:["By default, specifying ",(0,r.jsx)("a",{href:"#entities",children:(0,r.jsx)("code",{children:"entities"})})," introduces a ",(0,r.jsx)("a",{href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Scan.html#API_Scan_RequestSyntax",children:"Filter Expression"})," on the ",(0,r.jsx)("a",{href:"../../entities/internal-attributes#entity",children:(0,r.jsx)("code",{children:"entity"})})," internal attribute. Set this option to ",(0,r.jsx)("code",{children:"false"})," to disable this behavior.\n",(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),"This option is useful for querying items that lack the ",(0,r.jsx)("a",{href:"../../entities/internal-attributes#entity",children:(0,r.jsx)("code",{children:"entity"})})," internal attribute (e.g., when migrating to DynamoDB-Toolbox). In this case, DynamoDB-Toolbox attempts to format the item for each entity and disregards it if none succeed.\n",(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),"Note that you can also use ",(0,r.jsx)("a",{href:"https://aws.amazon.com/fr/blogs/developer/middleware-stack-modular-aws-sdk-js/",children:"Middleware Stacks"})," to reintroduce the entity attribute and improve performance."]})})]}),(0,r.jsxs)("tr",{children:[(0,r.jsx)("td",{children:(0,r.jsxs)("code",{children:["noEntityMatch",(0,r.jsx)("wbr",{}),"Behavior"]})}),(0,r.jsx)("td",{align:"center",children:(0,r.jsxs)("code",{children:["NoEntityMatch",(0,r.jsx)("wbr",{}),"Behavior"]})}),(0,r.jsx)("td",{align:"center",children:(0,r.jsx)("code",{children:'"THROW"'})}),(0,r.jsx)("td",{children:(0,r.jsxs)(t.p,{children:["If ",(0,r.jsx)("code",{children:"entityAttrFilter"})," is ",(0,r.jsx)("code",{children:"false"}),", this option defines the behavior when a returned item fails to be formatted for all entities.\n",(0,r.jsx)("br",{}),(0,r.jsx)("br",{}),"Possible values are ",(0,r.jsx)("code",{children:'"THROW"'})," to throw an error and ",(0,r.jsx)("code",{children:'"DISCARD"'})," to discard the item."]})})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(t.admonition,{title:"Examples",type:"note",children:(0,r.jsxs)(a.A,{children:[(0,r.jsx)(o.A,{value:"basic",label:"Basic",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"await PokeTable.build(DeletePartitionCommand)\n  .entities(PokemonEntity)\n  .query({ partition: 'ashKetchum' })\n  .send()\n"})})}),(0,r.jsx)(o.A,{value:"consistent",label:"Consistent",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"await PokeTable.build(DeletePartitionCommand)\n  .entities(PokemonEntity)\n  .query({ partition: 'ashKetchum' })\n  .options({ consistent: true })\n  .send()\n"})})}),(0,r.jsx)(o.A,{value:"indexed",label:"Index",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"await PokeTable.build(DeletePartitionCommand)\n  .entities(PokemonEntity)\n  .query({\n    index: 'byTrainerId',\n    partition: 'ashKetchum',\n    range: { gte: 50 }\n  })\n  .send()\n"})})}),(0,r.jsx)(o.A,{value:"filtered",label:"Filtered",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"await PokeTable.build(DeletePartitionCommand)\n  .entities(PokemonEntity, TrainerEntity)\n  .query({ partition: 'ashKetchum' })\n  .options({\n    filters: {\n      POKEMONS: { attr: 'pokeType', eq: 'fire' },\n      TRAINERS: { attr: 'age', gt: 18 }\n    }\n  })\n  .send()\n"})})}),(0,r.jsx)(o.A,{value:"multitenant",label:"Multitenant",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"await PokeTable.build(DeletePartitionCommand)\n  .entities(PokemonEntity)\n  .query({ partition: 'ashKetchum' })\n  .options({ tableName: `tenant-${tenantId}-pokemons` })\n  .send()\n"})})}),(0,r.jsx)(o.A,{value:"aborted",label:"Aborted",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"const abortController = new AbortController()\nconst abortSignal = abortController.signal\n\nawait PokeTable.build(DeletePartitionCommand)\n  .entities(PokemonEntity)\n  .query({ partition: 'ashKetchum' })\n  .send({ abortSignal })\n\n// \ud83d\udc47 Aborts the command\nabortController.abort()\n"})})}),(0,r.jsx)(o.A,{value:"entity-attr",label:"Entity Attr.",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"await PokeTable.build(DeletePartitionCommand)\n  .entities(PokemonEntity, TrainerEntity)\n  .query({ partition: 'ashKetchum' })\n  .options({\n    entityAttrFilter: false,\n    noEntityMatchBehavior: 'DISCARD'\n  })\n  .send()\n"})})})]})}),"\n",(0,r.jsx)(t.h2,{id:"response",children:"Response"}),"\n",(0,r.jsxs)(t.p,{children:["The response syntax is similar to the ",(0,r.jsx)(t.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Query.html#API_Query_ResponseElements",children:"DynamoDB Query API"}),", except that:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"Items"})," are ",(0,r.jsx)(t.strong,{children:"not"})," returned"]}),"\n",(0,r.jsxs)(t.li,{children:["The query ",(0,r.jsx)(t.code,{children:"ConsumedCapacity"})," is renamed as ",(0,r.jsx)(t.code,{children:"QueryConsumedCapacity"})]}),"\n",(0,r.jsxs)(t.li,{children:["The batch write ",(0,r.jsx)(t.code,{children:"ConsumedCapacity"})," is renamed as ",(0,r.jsx)(t.code,{children:"BatchWriteConsumedCapacity"})]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["You can use the ",(0,r.jsx)(t.code,{children:"DeletePartitionResponse"})," type to explicitly type an object as a ",(0,r.jsx)(t.code,{children:"DeletePartitionCommand"})," response object:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import type { DeletePartitionResponse } from 'dynamodb-toolbox/table/actions/deletePartition'\n\nconst deletePartitionResponse: DeletePartitionResponse<\n  typeof PokeTable,\n  // \ud83d\udc47 Query\n  { partition: 'ashKetchum' },\n  // \ud83d\udc47 Optional entities\n  [typeof PokemonEntity],\n> = { Count: ... }\n"})})]})}function x(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);