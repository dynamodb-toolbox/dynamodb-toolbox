"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7482],{8559:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=t(4848),s=t(8453),i=t(1470),a=t(9365);const o={title:"Parse",sidebar_custom_props:{sidebarActionType:"util"}},d="EntityParser",l={id:"entities/actions/parse/index",title:"Parse",description:"Given an input of any type and a mode, validates that it respects the schema of the Entity and applies transformations:",source:"@site/versioned_docs/version-v1/3-entities/4-actions/17-parse/index.md",sourceDirName:"3-entities/4-actions/17-parse",slug:"/entities/actions/parse/",permalink:"/docs/v1/entities/actions/parse/",draft:!1,unlisted:!1,tags:[],version:"v1",frontMatter:{title:"Parse",sidebar_custom_props:{sidebarActionType:"util"}},sidebar:"tutorialSidebar",previous:{title:"Utilities",permalink:"/docs/v1/entities/actions/utilities/"},next:{title:"ParseCondition",permalink:"/docs/v1/entities/actions/parse-condition/"}},c={},u=[{value:"Methods",id:"methods",level:2},{value:"<code>parse(...)</code>",id:"parse",level:3},{value:"<code>reparse(...)</code>",id:"reparse",level:3}];function p(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"entityparser",children:"EntityParser"})}),"\n",(0,r.jsxs)(n.p,{children:["Given an input of any type and a mode, validates that it respects the schema of the ",(0,r.jsx)(n.code,{children:"Entity"})," and applies transformations:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { EntityParser } from 'dynamodb-toolbox/entity/actions/parse'\n\nconst {\n  // \ud83d\udc47 Parsed item + Primary key\n  item,\n  key\n} = PokemonEntity.build(EntityParser).parse(input)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The default mode is ",(0,r.jsx)(n.code,{children:"put"}),", but you can switch it to ",(0,r.jsx)(n.code,{children:"update"})," or ",(0,r.jsx)(n.code,{children:"key"})," if needed:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const parsed = PokemonEntity.build(EntityParser).parse(\n  keyInput,\n  // Additional options\n  { mode: 'key' }\n)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In DynamoDB-Toolbox, parsing is done in ",(0,r.jsx)(n.strong,{children:"4 steps"}),":"]}),"\n",(0,r.jsx)(n.mermaid,{value:"flowchart LR\n  classDef mmddescription fill:none,stroke:none,font-style:italic\n  classDef mmdcontainer fill:#eee4,stroke-width:1px,stroke-dasharray:3,stroke:#ccc,font-weight:bold,font-size:large\n  classDef mmdspace fill:none,stroke:none,color:#0000\n\n  input(Input)\n  input:::mmddescription\n\n  subgraph Filling\n    space1( ):::mmdspace\n\n    defaults(Applies<br/><b>defaults</b>)\n    links(Applies<br/><b>links</b>)\n    fillDescr(...clones the item, adds<br/><b>defaults</b> and <b>links</b>.<br/>):::mmddescription\n\n    defaults --\x3e links\n  end\n\n  input .-> defaults\n\n  Filling:::mmdcontainer\n\n  subgraph Parsing\n    space2( ):::mmdspace\n\n    parsing(Throws an<br/><b>error</b> if invalid)\n    parsingDescr(...<b>validates</b> the item.):::mmddescription\n\n    links --\x3e parsing\n  end\n\n\n  Parsing:::mmdcontainer\n\n  subgraph Transforming\n    space3( ):::mmdspace\n\n    transform(Last <b>transforms</b>)\n    transformDescr(...<b>renames</b><br/>and <b>transforms</b>.):::mmddescription\n\n    parsing--\x3etransform\n  end\n\n  Transforming:::mmdcontainer\n\n  transformed(Transformed.)\n  transformed:::mmddescription\n\n  transform .-> transformed"}),"\n",(0,r.jsx)(n.p,{children:"Note that:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Additional fields are omitted, but inputs are not mutated"}),"\n",(0,r.jsxs)(n.li,{children:["The mode ",(0,r.jsx)(n.code,{children:"defaults"})," and ",(0,r.jsx)(n.code,{children:"links"})," are applied"]}),"\n",(0,r.jsxs)(n.li,{children:["Transformations (i.e. ",(0,r.jsx)(n.code,{children:"savedAs"})," and ",(0,r.jsx)(n.code,{children:"transforms"}),") are applied"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Table"})," primary key is derived from the validated input by applying ",(0,r.jsx)(n.a,{href:"/docs/v1/entities/usage/#computekey",children:(0,r.jsx)(n.code,{children:"computeKey"})})," if it exists, or extracted from the transformed input otherwise."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["This action is mostly a ",(0,r.jsxs)(n.strong,{children:["wrapper around the schema ",(0,r.jsx)(n.a,{href:"/docs/v1/schemas/actions/parse",children:(0,r.jsx)(n.code,{children:"Parser"})})," action"]}),", so we highly recommend you read its dedicated documentation first."]})}),"\n",(0,r.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(n.h3,{id:"parse",children:(0,r.jsx)(n.code,{children:"parse(...)"})}),"\n",(0,r.jsx)("p",{style:{marginTop:"-15px"},children:(0,r.jsx)("i",{children:(0,r.jsx)("code",{children:"(input: unknown, options?: ParseItemOptions) => TransformedItem<ENTITY>"})})}),"\n",(0,r.jsx)(n.p,{children:"Parses an input of any type:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const parsed = PokemonEntity.build(EntityParser).parse(input)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can provide ",(0,r.jsx)(n.strong,{children:"parsing options"})," as a second argument. Available options:"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Option"}),(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Type"}),(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Default"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"fill"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"true"})}),(0,r.jsxs)(n.td,{children:["Whether to complete the input (with ",(0,r.jsx)(n.code,{children:"defaults"})," and ",(0,r.jsx)(n.code,{children:"links"}),") prior to validation or not."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"mode"})}),(0,r.jsxs)(n.td,{style:{textAlign:"center"},children:[(0,r.jsx)(n.code,{children:"put"}),", ",(0,r.jsx)(n.code,{children:"key"})," or ",(0,r.jsx)(n.code,{children:"update"})]}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.code,{children:"put"})}),(0,r.jsxs)(n.td,{children:["The mode of the parsing: Impacts which ",(0,r.jsx)(n.code,{children:"default"})," and ",(0,r.jsx)(n.code,{children:"link"})," should be used, as well as requiredness during validation."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"parseExtension"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:(0,r.jsx)(n.em,{children:"(internal)"})}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"-"}),(0,r.jsxs)(n.td,{children:["Dependency injection required to parse extended syntax (",(0,r.jsx)(n.code,{children:"$get"}),", ",(0,r.jsx)(n.code,{children:"$add"})," etc.) when using the ",(0,r.jsx)(n.code,{children:"update"})," mode (check example below)."]})]})]})]}),"\n",(0,r.jsx)(n.admonition,{title:"Examples",type:"note",children:(0,r.jsxs)(i.A,{children:[(0,r.jsx)(a.A,{value:"put",label:"Put",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const pokemon = {\n  pokemonId: 'pikachu1',\n  name: 'Pikachu',\n  types: ['Electric'],\n  ...\n}\n\nconst parsed = PokemonEntity.build(EntityParser).parse(pokemon)\n"})})}),(0,r.jsx)(a.A,{value:"key",label:"Key",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const { key } = PokemonEntity.build(EntityParser).parse(\n  { pokemonId: 'pikachu1' },\n  { mode: 'key' }\n)\n"})})}),(0,r.jsx)(a.A,{value:"update",label:"Update",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const { item } = PokemonEntity.build(EntityParser).parse(\n  { pokemonId: 'bulbasaur1', customName: 'PlantyDino' },\n  { mode: 'update' }\n)\n"})})}),(0,r.jsx)(a.A,{value:"update-extended",label:"Update (extended)",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import {\n  $add,\n  parseUpdateExtension\n} from 'dynamodb-toolbox/entity/actions/update'\n\nconst { item } = PokemonEntity.build(EntityParser).parse(\n  // \ud83d\udc47 `$add` is an extension, so `parseExtension`  is needed\n  { pokemonId: 'pikachu1', customName: $add(1) },\n  { mode: 'update', parseExtension: parseUpdateExtension }\n)\n"})})})]})}),"\n",(0,r.jsxs)(n.p,{children:["You can use the ",(0,r.jsx)(n.code,{children:"TransformedItem"})," generic type to explicitly type an object as a parsing output object:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import type { TransformedItem } from 'dynamodb-toolbox/entity'\n\nconst transformedItem: TransformedItem<\n  typeof PokemonEntity,\n  // \ud83d\udc47 Optional options\n  { mode: 'key' }\n  // \u274c Throws a type error\n> = { invalid: 'input' }\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Note that the ",(0,r.jsx)(n.code,{children:"SavedItem"})," generic is actually based on it:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import type { SavedItem } from 'dynamodb-toolbox/parse'\n\nconst savedItem: SavedItem<typeof PokemonEntity> = {\n  pokemonId: '123'\n  ...\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"reparse",children:(0,r.jsx)(n.code,{children:"reparse(...)"})}),"\n",(0,r.jsx)("p",{style:{marginTop:"-15px"},children:(0,r.jsx)("i",{children:(0,r.jsx)("code",{children:"(input: InputItem<ENTITY>, options?: ParseItemOptions) => TransformedItem<ENTITY>"})})}),"\n",(0,r.jsxs)(n.p,{children:["Similar to ",(0,r.jsx)(n.a,{href:"#parse",children:(0,r.jsx)(n.code,{children:".parse"})}),", but with the input correctly typed (taking the mode into account) instead of ",(0,r.jsx)(n.code,{children:"unknown"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"PokemonEntity.build(EntityParser)\n  // \u274c Throws a type error\n  .reparse({ invalid: 'input' })\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can use the ",(0,r.jsx)(n.code,{children:"InputItem"})," generic type (or ",(0,r.jsx)(n.code,{children:"ValidItem"})," if ",(0,r.jsx)(n.code,{children:"fill"})," is set to ",(0,r.jsx)(n.code,{children:"false"}),") to explicitly type an object as a parsing input object:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import type { InputItem } from 'dynamodb-toolbox/entity'\n\nconst input: InputItem<\n  typeof PokemonEntity,\n  // \ud83d\udc47 Optional options\n  { mode: 'key' }\n  // \u274c Throws a type error\n> = { invalid: 'input' }\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Note that the ",(0,r.jsx)(n.code,{children:"KeyInputItem"})," generic is actually based on it:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import type { KeyInputItem } from 'dynamodb-toolbox/entity'\n\nconst keyInput: KeyInputItem<typeof PokemonEntity> = {\n  pokemonId: 'pikachu1'\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var r=t(8215);const s={tabItem:"tabItem_Ymn6"};var i=t(4848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,a),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>k});var r=t(6540),s=t(8215),i=t(3104),a=t(6347),o=t(205),d=t(7485),l=t(1682),c=t(679);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}}))}(t);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const s=(0,a.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,d.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace({...s.location,search:n.toString()})}),[i,s])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,i=p(e),[a,d]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:i}))),[l,u]=m({queryString:t,groupId:s}),[x,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,i]=(0,c.Dv)(t);return[s,(0,r.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:s}),b=(()=>{const e=l??x;return h({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{b&&d(b)}),[b]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);d(e),u(e),f(e)}),[u,f,i]),tabValues:i}}var f=t(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(4848);function y(e){let{className:n,block:t,selectedValue:r,selectValue:a,tabValues:o}=e;const d=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),c=e=>{const n=e.currentTarget,t=d.indexOf(n),s=o[t].value;s!==r&&(l(n),a(s))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=d.indexOf(e.currentTarget)+1;n=d[t]??d[0];break}case"ArrowLeft":{const t=d.indexOf(e.currentTarget)-1;n=d[t]??d[d.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>d.push(e),onKeyDown:u,onClick:c,...i,className:(0,s.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function g(e){let{lazy:n,children:t,selectedValue:i}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===i));return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function v(e){const n=x(e);return(0,j.jsxs)("div",{className:(0,s.A)("tabs-container",b.tabList),children:[(0,j.jsx)(y,{...n,...e}),(0,j.jsx)(g,{...n,...e})]})}function k(e){const n=(0,f.A)();return(0,j.jsx)(v,{...e,children:u(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);