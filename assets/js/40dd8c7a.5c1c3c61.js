"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7636],{11470:(e,n,a)=>{a.d(n,{A:()=>k});var t=a(96540),s=a(18215),r=a(23104),i=a(56347),l=a(205),c=a(57485),o=a(31682),d=a(70679);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function m(e){const{values:n,children:a}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:a,attributes:t,default:s}}=e;return{value:n,label:a,attributes:t,default:s}}))}(a);return function(e){const n=(0,o.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function h(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:a}=e;const s=(0,i.W6)(),r=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,c.aZ)(r),(0,t.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function x(e){const{defaultValue:n,queryString:a=!1,groupId:s}=e,r=m(e),[i,c]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=a.find((e=>e.default))??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r}))),[o,u]=p({queryString:a,groupId:s}),[x,f]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,d.Dv)(a);return[s,(0,t.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:s}),j=(()=>{const e=o??x;return h({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{j&&c(j)}),[j]);return{selectedValue:i,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),f(e)}),[u,f,r]),tabValues:r}}var f=a(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=a(74848);function v(e){let{className:n,block:a,selectedValue:t,selectValue:i,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:o}=(0,r.a_)(),d=e=>{const n=e.currentTarget,a=c.indexOf(n),s=l[a].value;s!==t&&(o(n),i(s))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;n=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;n=c[a]??c[c.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":a},n),children:l.map((e=>{let{value:n,label:a,attributes:r}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>c.push(e),onKeyDown:u,onClick:d,...r,className:(0,s.A)("tabs__item",j.tabItem,r?.className,{"tabs__item--active":t===n}),children:a??n},n)}))})}function b(e){let{lazy:n,children:a,selectedValue:r}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=x(e);return(0,g.jsxs)("div",{className:(0,s.A)("tabs-container",j.tabList),children:[(0,g.jsx)(v,{...n,...e}),(0,g.jsx)(b,{...n,...e})]})}function k(e){const n=(0,f.A)();return(0,g.jsx)(y,{...e,children:u(e.children)},String(n))}},19365:(e,n,a)=>{a.d(n,{A:()=>i});a(96540);var t=a(18215);const s={tabItem:"tabItem_Ymn6"};var r=a(74848);function i(e){let{children:n,hidden:a,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(s.tabItem,i),hidden:a,children:n})}},28453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var t=a(96540);const s={},r=t.createContext(s);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},83393:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"schemas/map/index","title":"map","description":"Describes map values, i.e. a finite list of key-value pairs. Child attributes can have any type:","source":"@site/docs/4-schemas/14-map/index.md","sourceDirName":"4-schemas/14-map","slug":"/schemas/map/","permalink":"/docs/schemas/map/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"map","sidebar_custom_props":{"code":true}},"sidebar":"tutorialSidebar","previous":{"title":"item","permalink":"/docs/schemas/item/"},"next":{"title":"record","permalink":"/docs/schemas/record/"}}');var s=a(74848),r=a(28453),i=a(11470),l=a(19365);const c={title:"map",sidebar_custom_props:{code:!0}},o="Map",d={},u=[{value:"Properties",id:"properties",level:2},{value:"<code>.required()</code>",id:"required",level:3},{value:"<code>.hidden()</code>",id:"hidden",level:3},{value:"<code>.key()</code>",id:"key",level:3},{value:"<code>.savedAs(...)</code>",id:"savedas",level:3},{value:"<code>.default(...)</code>",id:"default",level:3},{value:"<code>.link&lt;Schema&gt;(...)</code>",id:"linkschema",level:3},{value:"<code>.validate(...)</code>",id:"validate",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>and(...)</code>",id:"and",level:3},{value:"<code>pick(...)</code>",id:"pick",level:3},{value:"<code>omit(...)</code>",id:"omit",level:3}];function m(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"map",children:"Map"})}),"\n",(0,s.jsxs)(n.p,{children:["Describes ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes",children:(0,s.jsx)(n.strong,{children:"map values"})}),", i.e. a finite list of key-value pairs. Child attributes can have any type:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { map } from 'dynamodb-toolbox/schema/map'\n\nconst fullNameSchema = map({\n  firstName: string(),\n  lastName: string()\n})\n\ntype FullName = FormattedValue<typeof fullNameSchema>\n// => {\n//  firstName: string\n//  lastName: string\n// }\n\nconst deepMagic = map({\n  does: map({\n    work: string().const('!')\n  })\n})\n\ntype DeepMagic = FormattedValue<typeof deepMagic>\n// => { does: { work: \"!\" } }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"required",children:(0,s.jsx)(n.code,{children:".required()"})}),"\n",(0,s.jsx)("p",{style:{marginTop:"-15px"},children:(0,s.jsx)("i",{children:(0,s.jsx)("code",{children:"string | undefined"})})}),"\n",(0,s.jsxs)(n.p,{children:["Tags schema values as ",(0,s.jsx)(n.strong,{children:"required"})," (at root level or within other Maps). Possible values are:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)("code",{children:["'atLeastOnce' ",(0,s.jsx)("i",{children:"(default)"})]}),": Required (starting value)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"'always'"}),": Always required (including updates)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"'never'"}),": Optional"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Equivalent\nconst nameSchema = map({\n  firstName: string(),\n  lastName: string()\n})\nconst nameSchema = map({ ... }).required()\nconst nameSchema = map(\n  { ... },\n  // Options can be provided as 2nd argument\n  { required: 'atLeastOnce' }\n)\n\n// shorthand for `.required('never')`\nconst nameSchema = map({ ... }).optional()\nconst nameSchema = map({ ... }, { required: 'never' })\n"})}),"\n",(0,s.jsx)(n.h3,{id:"hidden",children:(0,s.jsx)(n.code,{children:".hidden()"})}),"\n",(0,s.jsx)("p",{style:{marginTop:"-15px"},children:(0,s.jsx)("i",{children:(0,s.jsx)("code",{children:"boolean | undefined"})})}),"\n",(0,s.jsxs)(n.p,{children:["Omits schema values during ",(0,s.jsx)(n.a,{href:"/docs/schemas/actions/format",children:"formatting"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameSchema = map({\n  firstName: string(),\n  lastName: string()\n}).hidden()\nconst nameSchema = map({ ... }, { hidden: true })\n"})}),"\n",(0,s.jsx)(n.h3,{id:"key",children:(0,s.jsx)(n.code,{children:".key()"})}),"\n",(0,s.jsx)("p",{style:{marginTop:"-15px"},children:(0,s.jsx)("i",{children:(0,s.jsx)("code",{children:"boolean | undefined"})})}),"\n",(0,s.jsx)(n.p,{children:"Tags schema values as a primary key attribute or linked to a primary key attribute:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Note: The method also sets the `required` property to 'always'\n// (it is often the case in practice, you can still use `.optional()` if needed)\nconst nameSchema = map({\n  firstName: string(),\n  lastName: string()\n}).key()\nconst nameSchema = map({ ... }, {\n  key: true,\n  required: 'always'\n})\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note that if child attributes are required to derive the primary key, you must also tag them as ",(0,s.jsx)(n.code,{children:"key"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameSchema = map({\n  // \ud83d\udc47 Required in get operations\n  firstName: string().key(),\n  // \ud83d\udc47 NOT required\n  lastName: string()\n}).key()\n"})}),"\n",(0,s.jsx)(n.h3,{id:"savedas",children:(0,s.jsx)(n.code,{children:".savedAs(...)"})}),"\n",(0,s.jsx)("p",{style:{marginTop:"-15px"},children:(0,s.jsx)("i",{children:(0,s.jsx)("code",{children:"string"})})}),"\n",(0,s.jsxs)(n.p,{children:["Renames schema values during the ",(0,s.jsx)(n.a,{href:"/docs/schemas/actions/parse",children:"transformation step"})," (at root level or within other Maps):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameSchema = map({\n  firstName: string(),\n  lastName: string()\n}).savedAs('n')\nconst nameSchema = map({ ... }, { savedAs: 'pt' })\n"})}),"\n",(0,s.jsx)(n.h3,{id:"default",children:(0,s.jsx)(n.code,{children:".default(...)"})}),"\n",(0,s.jsx)("p",{style:{marginTop:"-15px"},children:(0,s.jsx)("i",{children:(0,s.jsx)("code",{children:"ValueOrGetter<CHILD_ATTRIBUTES>"})})}),"\n",(0,s.jsxs)(n.p,{children:["Specifies default values. See ",(0,s.jsx)(n.a,{href:"/docs/schemas/defaults-and-links/",children:"Defaults and Links"})," for more details:"]}),"\n",(0,s.jsx)(n.admonition,{title:"Examples",type:"note",children:(0,s.jsxs)(i.A,{children:[(0,s.jsx)(l.A,{value:"put-update",label:"Put/Update",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const now = () => new Date().toISOString()\n\nconst timestampsSchema = map({\n  created: string(),\n  updated: string().optional()\n})\n  .default(() => ({ created: now() }))\n  .updateDefault(() => ({ updated: now() }))\n// \ud83d\udc47 Similar to\nconst timestampsSchema = map({ ... })\n  .putDefault(() => ({ created: now() }))\n  .updateDefault(() => ({ updated: now() }))\n// \ud83d\udc47 ...or\nconst timestampsSchema = map({ ... }, {\n  putDefault: () => ({ created: now() }),\n  updateDefault: () => ({ updated: now() })\n})\n"})})}),(0,s.jsx)(l.A,{value:"key",label:"Key",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const idsSchema = map({\n  id: string().key(),\n  subId: string().key().optional()\n})\n  .key()\n  .default({ id: '123' })\n// \ud83d\udc47 Similar to\nconst idsSchema = map({ ... })\n  .key()\n  .keyDefault({ id: '123' })\n// \ud83d\udc47 ...or\nconst idsSchema = map({ ... }, {\n  key: true,\n  required: 'always',\n  keyDefault: { id: '123' }\n})\n"})})})]})}),"\n",(0,s.jsx)(n.h3,{id:"linkschema",children:(0,s.jsx)(n.code,{children:".link<Schema>(...)"})}),"\n",(0,s.jsx)("p",{style:{marginTop:"-15px"},children:(0,s.jsx)("i",{children:(0,s.jsx)("code",{children:"Link<SCHEMA, CHILD_ATTRIBUTES>"})})}),"\n",(0,s.jsxs)(n.p,{children:["Similar to ",(0,s.jsx)(n.a,{href:"#default",children:(0,s.jsx)(n.code,{children:".default(...)"})})," but allows deriving the default value from other attributes. See ",(0,s.jsx)(n.a,{href:"/docs/schemas/defaults-and-links/",children:"Defaults and Links"})," for more details:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const pokemonSchema = item({\n  name: string()\n}).and(prevSchema => ({\n  parsedName: map({\n    firstName: string(),\n    lastName: string()\n  }).link<typeof prevSchema>(\n    // \ud83d\ude4c Correctly typed!\n    ({ name }) => {\n      const [firstName, lastName] = name.split(' ')\n      return { firstName, lastName }\n    }\n  )\n}))\n"})}),"\n",(0,s.jsx)(n.h3,{id:"validate",children:(0,s.jsx)(n.code,{children:".validate(...)"})}),"\n",(0,s.jsx)("p",{style:{marginTop:"-15px"},children:(0,s.jsx)("i",{children:(0,s.jsx)("code",{children:"Validator<CHILD_ATTRIBUTES>"})})}),"\n",(0,s.jsxs)(n.p,{children:["Adds custom validation. See ",(0,s.jsx)(n.a,{href:"/docs/schemas/custom-validation/",children:"Custom Validation"})," for more details:"]}),"\n",(0,s.jsx)(n.admonition,{title:"Examples",type:"note",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nonEmptyMapSchema = map({\n  str: string().optional(),\n  num: number().optional()\n}).validate(input => Object.keys(input).length > 0)\n// \ud83d\udc47 Similar to\nconst nonEmptyMapSchema = map({\n  str: string().optional(),\n  num: number().optional()\n}).putValidate(input => Object.keys(input).length > 0)\n// \ud83d\udc47 ...or\nconst nonEmptyMapSchema = map(\n  {\n    str: string().optional(),\n    num: number().optional()\n  },\n  { putValidator: input => Object.keys(input).length > 0 }\n)\n"})})}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)(n.p,{children:["Map schemas can be used to build ",(0,s.jsx)(n.strong,{children:"new schemas"})," with the following methods:"]}),"\n",(0,s.jsx)(n.h3,{id:"and",children:(0,s.jsx)(n.code,{children:"and(...)"})}),"\n",(0,s.jsx)("p",{style:{marginTop:"-15px"},children:(0,s.jsx)("i",{children:(0,s.jsx)("code",{children:"(attr: NEW_ATTR | (MapSchema<OLD_ATTR> => NEW_ATTR)) => MapSchema<OLD_ATTR & NEW_ATTR>"})})}),"\n",(0,s.jsxs)(n.p,{children:["Produces a new map schema by ",(0,s.jsx)(n.strong,{children:"extending"})," the original schema with ",(0,s.jsx)(n.strong,{children:"new attributes"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const extendedSchema = baseSchema.and({\n  newAttribute: string(),\n  ...\n})\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["In case of naming conflicts, new attributes ",(0,s.jsx)(n.strong,{children:"override"})," the previous ones."]})}),"\n",(0,s.jsxs)(n.p,{children:["The method also accepts functions that return new attributes. In this case, the previous schema is provided as an argument (which is particularly useful for building ",(0,s.jsx)(n.a,{href:"/docs/schemas/defaults-and-links/#links",children:"Links"}),"):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const extendedSchema = mySchema.and(prevSchema => ({\n  newAttribute: string(),\n  ...\n}))\n"})}),"\n",(0,s.jsx)(n.h3,{id:"pick",children:(0,s.jsx)(n.code,{children:"pick(...)"})}),"\n",(0,s.jsx)("p",{style:{marginTop:"-15px"},children:(0,s.jsx)("i",{children:(0,s.jsx)("code",{children:"(...attrNames: ATTR_NAMES[]) => MapSchema<Pick<ATTR, ATTR_NAMES>>"})})}),"\n",(0,s.jsxs)(n.p,{children:["Produces a new map schema by ",(0,s.jsx)(n.strong,{children:"picking"})," only certain attributes from the original schema:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const picked = pokemonSchema.pick('name', 'pokemonLevel')\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Due to the potential disruptive nature of this method on ",(0,s.jsx)(n.a,{href:"/docs/schemas/defaults-and-links/#links",children:"links"}),", they are ",(0,s.jsx)(n.strong,{children:"reset"})," in the process:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameSchema = map({\n  firstName: string(),\n  lastName: string(),\n  completeName: string().link(({ firstName, lastName }) =>\n    [firstName, lastName].join(' ')\n  )\n})\n\nconst picked = nameSchema.pick('lastName', 'completeName')\n\npicked.attributes.completeName.props.putLink\n// => undefined\n"})}),"\n",(0,s.jsx)(n.h3,{id:"omit",children:(0,s.jsx)(n.code,{children:"omit(...)"})}),"\n",(0,s.jsx)("p",{style:{marginTop:"-15px"},children:(0,s.jsx)("i",{children:(0,s.jsx)("code",{children:"(...attrNames: ATTR_NAMES[]) => MapSchema<Omit<ATTR, ATTR_NAMES>>"})})}),"\n",(0,s.jsxs)(n.p,{children:["Produces a new map schema by ",(0,s.jsx)(n.strong,{children:"omitting"})," certain attributes out of the original schema:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const omitted = pokemonSchema.omit('name', 'pokemonLevel')\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Due to the potential disruptive nature of this method on ",(0,s.jsx)(n.a,{href:"/docs/schemas/defaults-and-links/#links",children:"links"}),", they are ",(0,s.jsx)(n.strong,{children:"reset"})," in the process:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const nameSchema = map({\n  firstName: string(),\n  lastName: string(),\n  completeName: string().link(({ firstName, lastName }) =>\n    [firstName, lastName].join(' ')\n  )\n})\n\nconst omitted = nameSchema.omit('firstName')\n\nomitted.attributes.completeName.props.putLink\n// => undefined\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}}}]);