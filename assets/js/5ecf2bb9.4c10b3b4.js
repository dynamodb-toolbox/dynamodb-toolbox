"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5225],{2688:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var i=n(4848),s=n(8453),r=n(1470),a=n(9365);const o={title:"Internal Attributes"},l="Internal Attributes",d={id:"entities/internal-attributes/index",title:"Internal Attributes",description:"The Entity constructor automatically adds internal attributes to your schemas:",source:"@site/docs/3-entities/2-internal-attributes/index.md",sourceDirName:"3-entities/2-internal-attributes",slug:"/entities/internal-attributes/",permalink:"/docs/entities/internal-attributes/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Internal Attributes"},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/docs/entities/usage/"},next:{title:"Type Inference",permalink:"/docs/entities/type-inference/"}},c={},u=[{value:"<code>entity</code>",id:"entity",level:2},{value:"Timestamp Attributes",id:"timestamp-attributes",level:2},{value:"<code>name</code>",id:"name",level:3},{value:"<code>savedAs</code>",id:"savedas",level:3},{value:"<code>hidden</code>",id:"hidden",level:3},{value:"From variable",id:"from-variable",level:3},{value:"Linking Timestamps",id:"linking-timestamps",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"internal-attributes",children:"Internal Attributes"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"Entity"})," constructor automatically adds ",(0,i.jsx)(t.strong,{children:"internal attributes"})," to your schemas:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["An ",(0,i.jsx)(t.a,{href:"#entity",children:"Entity Attribute"})," ",(0,i.jsx)(t.em,{children:"(required)"})," that ",(0,i.jsxs)(t.strong,{children:["tags items with the ",(0,i.jsx)(t.code,{children:"name"})," of the entity"]}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["Two ",(0,i.jsx)(t.a,{href:"#timestamp-attributes",children:"Timestamp Attributes"})," ",(0,i.jsx)(t.em,{children:"(optional)"})," that ",(0,i.jsx)(t.strong,{children:"record when the item was created and last modified"})," with timestamps in ",(0,i.jsx)(t.a,{href:"https://wikipedia.org/wiki/ISO_8601",children:"ISO 8601 format"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["If the schema contains a conflicting attribute, the constructor throws a ",(0,i.jsx)(t.code,{children:"reservedAttributeName"})," error. To avoid this, DynamoDB-Toolbox allows you to customize the ",(0,i.jsx)(t.code,{children:"name"})," and ",(0,i.jsx)(t.code,{children:"savedAs"})," properties of internal attributes."]}),"\n",(0,i.jsxs)(t.admonition,{type:"tip",children:[(0,i.jsxs)(t.p,{children:["You can get familiar with the internal attributes by using the ",(0,i.jsx)(t.code,{children:"FormattedItem"})," and ",(0,i.jsx)(t.code,{children:"SavedItem"})," types (see ",(0,i.jsx)(t.a,{href:"/docs/entities/type-inference/",children:"Type Inference"})," for more details):"]}),(0,i.jsxs)(n,{className:"details-in-admonition",children:[(0,i.jsxs)("summary",{children:["\ud83d\udd0e ",(0,i.jsx)("b",{children:"Show code"})]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"import type { FormattedItem, SavedItem } from 'dynamodb-toolbox/entity'\n\nconst PokemonEntity = new Entity({\n  name: 'Pokemon',\n  schema: item({\n    pokemonClass: string().key().savedAs('pk'),\n    pokemonId: string().key().savedAs('sk'),\n    level: number()\n  }),\n  ...\n})\n\n// Pokemons in DynamoDB:\ntype SavedPokemon = SavedItem<typeof PokemonEntity>\n// => {\n//   pk: string,\n//   sk: string,\n//   level: number,\n//   _et: \"Pokemon\",\n//   _ct: string,\n//   _md: string,\n// }\n\n// Fetched Pokemons: (`entity` attribute is hidden)\ntype FormattedPokemon = FormattedItem<typeof PokemonEntity>\n// => {\n//   pokemonClass: string,\n//   pokemonId: string,\n//   level: number,\n//   created: string,\n//   modified: string,\n// }\n"})})]})]}),"\n",(0,i.jsx)(t.h2,{id:"entity",children:(0,i.jsx)(t.code,{children:"entity"})}),"\n",(0,i.jsxs)(t.p,{children:["A string attribute that tags your items with the ",(0,i.jsx)(t.code,{children:"Entity"})," name."]}),"\n",(0,i.jsxs)(t.p,{children:["While this attribute can be opted out of, we strongly ",(0,i.jsx)(t.strong,{children:"recommend keeping it enabled if you use Single Table Design"}),": It improves performance and enables entity-based filtering when fetching items from multiple entities within the same ",(0,i.jsx)(t.code,{children:"Table"})," (e.g. ",(0,i.jsx)(t.a,{href:"/docs/tables/actions/query/",children:"Queries"})," or ",(0,i.jsx)(t.a,{href:"/docs/tables/actions/scan/",children:"Scans"}),")."]}),"\n",(0,i.jsx)(t.p,{children:"If you use it, note that:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"The library automatically re-introduces the entity attribute during reads and writes, so you can start using DynamoDB-Toolbox even if your items don't contain it."}),"\n",(0,i.jsx)(t.li,{children:"However, we still recommend migrating your items for improved performance and entity-based filtering."}),"\n",(0,i.jsxs)(t.li,{children:["Finally, the ",(0,i.jsx)(t.code,{children:"name"})," of an ",(0,i.jsx)(t.code,{children:"Entity"})," ",(0,i.jsx)(t.strong,{children:"cannot be updated"})," once it has its first items (at least not without a data migration)."]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["By default, the attribute is hidden and named ",(0,i.jsx)(t.code,{children:"entity"}),". This can be overridden via the ",(0,i.jsx)(t.code,{children:"entityAttribute"})," property:"]}),"\n",(0,i.jsx)(t.admonition,{title:"Examples",type:"note",children:(0,i.jsxs)(r.A,{children:[(0,i.jsx)(a.A,{value:"default",label:"Default",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"const PokemonEntity = new Entity({\n  name: 'Pokemon',\n  entityAttribute: true,\n  ...\n})\n"})})}),(0,i.jsx)(a.A,{value:"disabled",label:"Disabled",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"const PokemonEntity = new Entity({\n  name: 'Pokemon',\n  entityAttribute: false,\n  ...\n})\n"})})}),(0,i.jsx)(a.A,{value:"custom",label:"Custom",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"const PokemonEntity = new Entity({\n  name: 'Pokemon',\n  entityAttribute: {\n    name: '__entity__',\n    hidden: false\n  },\n  ...\n})\n"})})})]})}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"savedAs"})," property must be specified at the ",(0,i.jsx)(t.code,{children:"Table"})," level, via the ",(0,i.jsx)(t.a,{href:"/docs/tables/usage/",children:(0,i.jsx)(t.code,{children:"entityAttributeSavedAs"})})," property."]})}),"\n",(0,i.jsx)(t.h2,{id:"timestamp-attributes",children:"Timestamp Attributes"}),"\n",(0,i.jsxs)(t.p,{children:["There are two timestamp attributes. Both of them are string attributes containing timestamps in ",(0,i.jsx)(t.a,{href:"https://wikipedia.org/wiki/ISO_8601",children:"ISO 8601 format"}),":"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"created"})," records when the item was ",(0,i.jsx)(t.strong,{children:"created"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"modified"})," records when the item was ",(0,i.jsx)(t.strong,{children:"last modified"})]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Timestamp attributes are optional. You can opt out by setting off the ",(0,i.jsx)(t.code,{children:"timestamps"})," property:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"const PokemonEntity = new Entity({\n  ...\n  // \ud83d\udc47 deactivates both timestamps\n  timestamps: false\n})\n"})}),"\n",(0,i.jsx)(t.p,{children:"You can also manage them independently:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"const PokemonEntity = new Entity({\n  ...\n  timestamps: {\n    created: true,\n    // \ud83d\udc47 deactivates `modified` attribute\n    modified: false\n  }\n})\n"})}),"\n",(0,i.jsx)("h4",{style:{fontSize:"large"},children:"Customizing Timestamps:"}),"\n",(0,i.jsxs)(t.p,{children:["Instead of ",(0,i.jsx)(t.code,{children:"true"}),", you can provide an object to ",(0,i.jsx)(t.strong,{children:"fine-tune each attribute"}),". Available options:"]}),"\n",(0,i.jsx)(t.h3,{id:"name",children:(0,i.jsx)(t.code,{children:"name"})}),"\n",(0,i.jsx)(t.p,{children:"The name of the attribute:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"const PokemonEntity = new Entity({\n  ...\n  timestamps: {\n    ...\n    modified: {\n      // `modified` by default\n      name: 'lastModified'\n    }\n  }\n})\n"})}),"\n",(0,i.jsx)(t.h3,{id:"savedas",children:(0,i.jsx)(t.code,{children:"savedAs"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"savedAs"})," property of the attribute:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"const PokemonEntity = new Entity({\n  ...\n  timestamps: {\n    ...\n    modified: {\n      // `_md` by default\n      savedAs: '__lastMod__'\n    }\n  }\n})\n"})}),"\n",(0,i.jsx)(t.h3,{id:"hidden",children:(0,i.jsx)(t.code,{children:"hidden"})}),"\n",(0,i.jsx)(t.p,{children:"Whether the attribute is hidden or not when formatting:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"const PokemonEntity = new Entity({\n  ...\n  timestamps: {\n    ...\n    modified: {\n      // `false` by default\n      hidden: true\n    }\n  }\n})\n"})}),"\n",(0,i.jsx)(t.h3,{id:"from-variable",children:"From variable"}),"\n",(0,i.jsxs)(t.p,{children:["When assigned to a variable, narrow the object type with ",(0,i.jsx)(t.code,{children:"as const"})," to preserve correct typescript types for the entity."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"const customTimestamps = {\n  created: false,\n  modified: {\n    name: 'updatedAt'\n  }\n} as const\n\nconst PokemonEntity = new Entity({\n  ...\n  timestamps: customTimestamps\n})\n"})}),"\n",(0,i.jsx)(t.h3,{id:"linking-timestamps",children:"Linking Timestamps"}),"\n",(0,i.jsxs)(t.p,{children:["It can be useful to link Timestamp Attributes elsewhere in the schema, for instance to ",(0,i.jsx)(t.a,{href:"https://aws.amazon.com/blogs/database/effective-data-sorting-with-amazon-dynamodb/",children:"query sorted items efficiently"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["Timestamp Attributes are automatically added by the ",(0,i.jsx)(t.code,{children:"Entity"})," class constructor. Thus, while direct references work in vanilla JS, ",(0,i.jsx)(t.strong,{children:"they need to be reintroduced manually in TypeScript"})," to keep type inference working."]}),"\n",(0,i.jsxs)(t.p,{children:["In this example, we define a ",(0,i.jsx)(t.code,{children:"PostEntity"})," to allow querying posts by ",(0,i.jsx)(t.code,{children:"ownerId"})," (using a GSI) and returning them sorted by creation date:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"const now = () => new Date().toISOString()\n\nconst PostEntity = new Entity({\n  name: 'POST',\n  table: PostsTable,\n  // Deactivate internal attributes\n  timestamps: false,\n  schema: item({\n    postId: string().key(),\n    ownerId: string(),\n    // We set the timestamp attributes manually\n    created: string().default(now).savedAs('_ct'),\n    modified: string()\n      .putDefault(now)\n      .updateDefault(now)\n      .savedAs('_md')\n  }).and(prevSchema => ({\n    byOwnerPK: string()\n      .link<typeof prevSchema>(({ ownerId }) => ownerId)\n      .hidden(),\n    byOwnerSK: string()\n      .link<typeof prevSchema>(\n        // \ud83d\ude4c Type inference works!\n        ({ created, postId }) => `${created}#${postId}`\n      )\n      .hidden()\n  }))\n})\n"})}),"\n",(0,i.jsxs)(t.p,{children:["We can now query all posts by ",(0,i.jsx)(t.code,{children:"ownerId"}),", sorted by creation date, using the ",(0,i.jsx)(t.code,{children:"byOwner"})," GSI:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"import { QueryCommand } from 'dynamodb-toolbox/table/actions/query'\n\nawait PostsTable.build(QueryCommand)\n  .entities(PostEntity)\n  .query({ index: 'byOwner', partition: ownerId })\n  .options({\n    maxPages: Infinity, // Beware of RAM issues\n    reverse: true // Sort descending (new first)\n  })\n  .send()\n"})})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>a});n(6540);var i=n(8215);const s={tabItem:"tabItem_Ymn6"};var r=n(4848);function a(e){let{children:t,hidden:n,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(s.tabItem,a),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>w});var i=n(6540),s=n(8215),r=n(3104),a=n(6347),o=n(205),l=n(7485),d=n(1682),c=n(679);function u(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:i,default:s}}=e;return{value:t,label:n,attributes:i,default:s}}))}(n);return function(e){const t=(0,d.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:n}=e;const s=(0,a.W6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(s.location.search);t.set(r,e),s.replace({...s.location,search:t.toString()})}),[r,s])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,r=h(e),[a,l]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const i=n.find((e=>e.default))??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:t,tabValues:r}))),[d,u]=p({queryString:n,groupId:s}),[b,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,r]=(0,c.Dv)(n);return[s,(0,i.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:s}),y=(()=>{const e=d??b;return m({value:e,tabValues:r})?e:null})();(0,o.A)((()=>{y&&l(y)}),[y]);return{selectedValue:a,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,r]),tabValues:r}}var f=n(2303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(4848);function j(e){let{className:t,block:n,selectedValue:i,selectValue:a,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.a_)(),c=e=>{const t=e.currentTarget,n=l.indexOf(t),s=o[n].value;s!==i&&(d(t),a(s))},u=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t),children:o.map((e=>{let{value:t,label:n,attributes:r}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,ref:e=>l.push(e),onKeyDown:u,onClick:c,...r,className:(0,s.A)("tabs__item",y.tabItem,r?.className,{"tabs__item--active":i===t}),children:n??t},t)}))})}function g(e){let{lazy:t,children:n,selectedValue:r}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function v(e){const t=b(e);return(0,x.jsxs)("div",{className:(0,s.A)("tabs-container",y.tabList),children:[(0,x.jsx)(j,{...t,...e}),(0,x.jsx)(g,{...t,...e})]})}function w(e){const t=(0,f.A)();return(0,x.jsx)(v,{...e,children:u(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(6540);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);